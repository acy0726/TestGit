Web AR: A Promising Future for Mobile Augmented Reality—State of the Art, Challenges, and Insights

모바일 증강현실(Mobile AR)이 학계와 업계 모두에서 주목을 받고 있다.

하드웨어 기반 모바일 AR과 앱 기반 모바일 AR은 모바일 AR 애플리케이션을 위한 두 가지 주요 플랫폼이다. 그러나 하드웨어 기반 모바일 AR 구현은 비용이 많이 들고 유연성이 떨어지는 것으로 알려져 있고, 앱 기반 구축에는 사전에 추가 다운로드와 설치가 필요하며 플랫폼 간 구축이 불편하다. 

이에 비해 웹 기반 AR(Web AR) 구현은 가볍고 플랫폼 간 서비스 프로비저닝 플랫폼으로 웹을 성공적으로 구축한 덕분에 사용자에게 광범위한 모바일 AR 환경을 제공할 수 있다. 

더욱이 5G 이동통신망의 등장은 모바일 통신의 효율을 높일 수 있는 잠재력을 가지고 있다.


웹 기반 접근 방식에서 AR 밀도 높은 컴퓨팅. 우리는 웹 AR이 우리 주변의 물리적(그리고 사이버) 세계와 상호작용하는 우리의 방식을 풍부하게 하는 혁신적인 기술을 제공할 것이라고 추측한다. 

본 논문에서는 첨단 기술과 모바일 AR의 기존 구현, 그리고 AR이 웹을 만났을 때 기술과 과제를 구현하는 방법에 대해 검토한다. 

뿐만 아니라, 다양한 잠재적 웹 AR 프로비저닝 접근방식, 특히 웹 AR 서비스를 제공하기 위해 삼투압 컴퓨팅 패러다임을 채택하는 적응적이고 확장 가능한 협업 분산 솔루션에 대해 자세히 설명한다. 

우리는 현재의 3G/4G 네트워크와 미래의 5G 네트워크 하에서 열린 도전과 연구 방향에 대한 논의를 가지고 이 논문을 마무리한다. 

우리는 이 논문이 연구자와 개발자들이 웹 AR의 연구개발 현황을 보다 잘 이해하도록 돕고 동시에 빠르게 성장하는 21세기의 모바일 및 무선 사업과 소비자 산업에 생명력 있는 웹 AR 경험을 전달하는 데 더 많은 연구 관심과 노력을 자극하는 데 도움이 되기를 바란다..

I. I. I. ITRODUITODUTION

지난 10년 동안 증강현실(AR)[1]–[3]의 경이적인 성장은 학계와 산업계로부터 상당한 연구개발 노력을 끌어 모았다. 

AR은 가상 콘텐츠를 현실과 매끄럽게 통합함으로써 사용자에게 현실 이상의 감각 경험을 제공할 수 있게 해준다. 

특히, 최근 몇 년간, 다음의 3가지 기술의 발전은 AR의 연구 개발을 더욱 촉진시켰다: 전용 AR 장치(예: Google Glass, Microsoft Holollens 및 Epson Moverio BT-300,1 및 Magic Leap), 강력한 개발 키트(예: ARCore, ARKit)의 출현. 모바일 장치와 센서 통합, 그리고 컴퓨터 비전(CV) 기술의 진보. 

AR은 엔터테인먼트, 광고, 교육, 내비게이션, 유지보수 등과 같은 많은 분야에서 실질적인 이점을 제공했다[4]–[8]. 예를 들어, 위치 기반 AR 게임인 포켓몬고는 공개 후 8주 만에 100여 개국에서 5억 건 이상의 다운로드를 기록했다[9]. 

AR과 가상현실(VR) 모두 우리의 존재에 대한 인식을 바꿀 수 있다. 그러나, AR은 세계에서의 우리의 존재를 다른 곳으로 전달하는 VR과 달리, 사용자들이 세상에 존재하는 것을 허용하고, 우리의 현재 인식된 존재 상태를 넘어 상황에 맞는 정보를 사용자에게 제공하는 능력을 추가함으로써 세계에 대한 우리의 인식을 단순히 "기동"시킨다. 

디지캐피털[10]은 2021년까지 세계 VR/AR 시장이 1080억 달러에 이를 것으로 전망했고, 시스코[11]는 2016~2021년 사이에 전 세계 AR 트래픽이 7배 증가할 것이라고 보고했다.


AR의 역사적 진화는 그림 1에 나타나 있다.
Sportvision이 처음으로 AR을 TV 생방송(1st & Ten, 1998년)에 적용한 후, 첫 번째 전용 AR 기기(Google Glass, 2012년)와 스마트폰(프로젝트 탱고, 2014년)으로 시작하여, 첫 번째 경이로운 AR App(Pokémon GO, 2016년)에 이르기까지, AR 기술과 장치 모두 강력하고 이동하며 경량화되는 경향이 뚜렷해졌다. 

그러나 현재의 모바일 증강현실(Mobile AR) 하드웨어 및 운영체제(예: Embedded Linux, Android, iOS)는 복잡한 다양성을 제시한다. 대부분의 모바일 AR 애플리케이션 또는 솔루션은 특정 플랫폼을 기반으로 설계되며 교차 플랫폼 지원이 부족하다.

더 많은 사용자에게 도달하기 위해, AR 애플리케이션은 다른 플랫폼[12]을 수용하기 위해 반복적인 개발 주기를 거쳐야 하는데, 이는 틀림없이 개발과 배치 비용을 증가시킨다. 웹 기반 AR(Web AR)에 대한 예비 시도가 이미 있지만, 제한된 네트워킹 및 컴퓨팅 능력은 실용성을 크게 방해한다. 웹 AR 프로비저닝 솔루션은 2017년 이후 사용자 디바이스와 모바일 네트워크의 발전이 계속되면서 개발자들의 관심을 다시 한 번 끌어모으고 있으며 모바일 AR의 유망한 방향으로 부상하고 있다.

월드 와이드 웹의 발명은 웹 기반 서비스 제공 패러다임을 가진 새로운 시대의 시작을 알렸다. 웹의 기본 교차 플랫폼과 경량 기능은 사용자를 위한 서비스 액세스를 단순화하여 웹 기반 애플리케이션의 대규모 홍보를 촉진한다. 웹 브라우저 외에도 오늘날 많은 모바일 앱(예: Facebook, Snapchat)도 상호 작용 경험과 교차 플랫폼 지원이라는 장점을 모두 갖춘 하이브리드(Native + Web) 방식으로 설계되어 있다.

이러한 모든 인프라는 웹 AR의 보급 촉진을 위한 공통 플랫폼을 제공한다. 여기서는 웹 AR을 웹 AR 구현 접근의 한 유형으로 정의한다. 

웹의 기술은 모바일 AR의 교차 플랫폼, 경량 및 보급형 서비스 프로비저닝에 대한 유망한 접근법을 제공하지만, 웹 AR을 실제 사례에서 적용하는 데는 여전히 몇 가지 과제가 있다. 컴퓨터 효율성, 에너지 효율성, 네트워킹은 세 가지 중요한 과제다. 

AR은 연산 및 데이터 집약적인 애플리케이션이다. 웹의 컴퓨팅 및 렌더링 기능이 제한되어 있어 고성능 및 에너지 효율적인 웹 AR을 달성하기가 더욱 어려워졌다. 

첫째, 웹 AR 애플리케이션의 제한된 성능은 사용자의 경험을 크게 저하시킬 것이다. 둘째, 모바일 장치의 배터리는 일반적인 기능만을 위해 설계되었기 때문에 복잡한 계산 작업으로 인해 발생하는 엄청난 압력에 직면할 것이다. 웹 AR 애플리케이션은 성능을 향상시키기 위해 일반적으로 컴퓨팅(예: 클라우드 컴퓨팅)을 오프로드하여 프로세스를 가속화하는 방법을 활용한다. 

그러나 연산 오프로딩은 추가적인 통신 지연을 도입할 수 있으며, 이는 사용자 경험에 영향을 미치고 현재의 이동 통신망 하에서 그것의 응용 프로그램을 제한할 것이다.

좋은 소식은 모바일 AR의 지형에 몇 가지 기술적 진보가 들어오기 시작했다는 것이다. 

첫째, 다가오는 5G 네트워크[13]는 모바일 AR, 특히 웹 AR에 새로운 기회를 제공한다. 더 높은 대역폭(0.1~1Gb/s)과 더 낮은 네트워크 지연(1~10ms)을 제공하여 모바일 네트워크에서의 데이터 전송을 향상시킨다. 

둘째로, 다중접근 에지 컴퓨팅2(MEC), 디바이스 대 디바이스(D2D) 통신, 네트워크 슬라이싱과 같은 새로운 특징의 도입은 웹 AR의 구축과 홍보를 위한 효율적인 인프라를 제공하는 적응적이고 확장 가능한 통신 메커니즘을 제공한다. 


그러므로 이용 가능한 5G 네트워크와 모바일 기기의 빠른 성능 향상은 웹 AR의 실용적 배치와 응용을 위한 탄탄한 기반을 구축했다.

이 논문의 나머지 부분은 다음과 같이 정리되어 있다. 섹션 II는 모바일 AR의 원칙과 세 가지 일반적인 구현 메커니즘, 그리고 AR이 웹과 만나는 시점에 대한 도전과 활성화 기술을 제시한다. 

섹션 III는 실제 사용 사례 및 실험의 경험에 기초한 다양한 웹 AR 구현 접근방식을 요약한다. 섹션 IV는 앞으로의 과제와 향후 연구 방향에 대해 논의한다. 우리는 이 논문을 V섹션에서 결론짓는다.

II. BACKGROUND: MOBILE AR PRINCIPLES AND TYPICAL IMPLEMENTATION MECHANISMS

AR은 가상 객체를 3-D 실제 환경과 실시간으로 통합하고 아즈마의 상호작용을 지원하는 기술로 정의되었다[2]. 이 절에서는 모바일 AR의 원리를 개괄적으로 설명하고 세 가지 대표적인 모바일 AR 구현 메커니즘을 요약한 후 웹 AR이 실제 사례에 적용할 때 직면하게 될 과제를 설명한다. 마지막으로, 웹 AR의 구현에 필요하거나 권장되는 몇 가지 웹 기술을 자세히 설명한다.


A. Mobile AR Principles

AR은 VR과 실제 현실 사이의 시각적 기술이다.
AR은 컴퓨터가 생성한 가상 콘텐츠를 실제 환경에 겹침으로써 사용자가 주변 환경을 더 잘 이해할 수 있도록 쉽게 도울 수 있다.

전형적인 AR 프로세스는 그림 3에 나타나 있다. 카메라와 다른 유형의 센서는 사용자 주변 정보를 지속적으로 수집하는 데 사용된다. 환경 인식은 캡처된 정보(예: 이미지/비디오, 위치 및 방향)를 분석하여 실제 세계의 인식과 인식을 파악한다. 한편, 사용자의 상호작용 정보도 센서로 수집한 후, 물체를 추적하기 위해 분석한다. 

환경에 대한 인식의 결과와 상호작용은 모두 실제 세계와의 가상 콘텐츠의 원활한 통합, 즉 렌더링 작업이 수행되고, 그 후에 AR이 사용자에게 제시된다.

B. Typical Implementation Mechanisms

컴퓨팅과 디스플레이 플랫폼을 포함한 모바일 기기의 발전은 AR 애플리케이션의 구현을 위한 더 많은 선택권을 제공한다. 

추적 기술에 따라 센서 기반, 비전 기반 및 하이브리드 추적 방법이라는 세 가지 측면에서 일반적인 모바일 AR 구현 메커니즘을 자세히 설명한다.

다른 구현 메커니즘은 컴퓨팅, 네트워킹 및 스토리지에 대한 서로 다른 복잡성으로 인해 자연스럽게 존재한다. 

센서 기반 방법은 상대적으로 경량 모바일 AR 구현 접근방식이지만, 반대로 비전 기반 접근방식은 런타임 플랫폼의 컴퓨팅 및 스토리지 기능과 네트워크 기능에 높은 수요를 두고 있다.

그림 4와 같이 하이브리드 추적 메커니즘은 분명히 절충적인 해결책이다.

1) 센서 기반 메커니즘: 오늘날 모바일 기기는 이미 가속도계, 자이로스코프, 나침반, 자기계, GPS 등과 같은 다양한 센서를 지원한다. 

이러한 유형의 구현 메커니즘[16]-[18]에 많은 노력을 기울였다. 위치기반 서비스 기술을 활용해 AR 경험을 제공하는 포켓몬고가 모바일 AR 분야에서 전대미문의 혁명을 일으킨 것이 대표적인 예다. 

카메라는 주변 환경을 캡처할 수 있지만, 배경으로서 환경을 표시하는 경우에만 사용할 수 있다는 점에 유의하십시오. 

단일 센서를 기반으로 한 모바일 AR 구현 메커니즘 외에도, 서로 다른 센서를 결합하면 많은 애플리케이션이 더 정확한 추적 결과를 얻을 수 있다[19]–[21]. 

센서 범주의 증가와 센서 기능의 지속적인 강화는 웹 AR 애플리케이션의 다양화를 위한 기반과 기회를 제공한다. 

컴퓨팅, 스토리지 및 네트워킹의 복잡성을 고려할 때 이 경량 웹 AR 구현 메커니즘은 현재 사용자가 시작할 수 있는 가장 낮은 옵션이다. 

단, 이 방법은 오픈 루프 방식으로 동작하며, 추적 오류를 실시간으로 평가하고 수정할 수 없기 때문에 불가피한 누적 오류가 발생한다.

2) 비전 기반 메커니즘: 마찬가지로 기기의 카메라는 주변 환경을 포착하지만, 시야에 기초한 물체 인식, 탐지, 추적의 기초를 추가로 제공한다. 이러한 유형의 메커니즘은 기능 대응성을 사용하여 가상 컨텐츠를 실제 객체와 정렬하기 위한 포즈 정보를 추정하며 폐쇄 루프 시스템과 유사하다. 각기 다른 특징에 따라 다음과 같이 두 가지 방법으로 나눌 수 있다. 프레임별 추적 접근방식은 앞에서 언급한 오류 축적을 방지한다. 단, 특히 자연 형상 추적 방법에 대해서는 모바일 장치에 대한 높은 연산 압력을 도입한다. 기기 능력의 향상 외에도, 네트워크(예: 다가오는 5G 네트워크)의 발전은 비효율적인 웹 AR 애플리케이션 성능 문제, 즉 계산 아웃소싱(섹션 III-B 참조)에 대한 또 다른 접근법을 제공할 것이다.


마커 기반 방법은 다음과 같은 두 가지 방법을 포함하여 랙 장착 요건을 충족하기 위해 사전 정의된 마커를 사용한다.

1) 기준법은 그림 5와 같이 형상, 크기, 색상 및 특성이 미리 정해져 있다. 그것은 변화하는 환경조건에서 탁월한 정확성과 견고성을 달성할 수 있다. 쉽게 식별되는 특징으로 개발 초기[23]–[25]에서 인기를 끌었다. 그러나, 미지의 환경이나 실외 환경에서의 기준의 배치 및 유지의 어려움은 적용 범위를 제한했다.

2) 자연형상 추적방법은 앞에서 언급한 기준추적방법의 어려움을 방지하여 적용범위가 넓다.

이 두 가지 접근방식은 다음과 같다.

1) 2-D 이미지: 실제 이미지 방법(예: 사진이나 포스터를 기반으로 함)은 기준 기반 방법의 대체물이다. 이 방법은 보다 강력한 개체 감지 및 인식 알고리즘을 필요로 한다. 예를 들어 패턴이 없는 솔리드 컬러 이미지와 같은 AR 포즈 추정에는 모든 2-D 영상을 사용할 수 있는 것은 아니다.

2) 3-D 객체: 2-D 영상에서 3-D 물체로 물체 추적을 확장하는 것은 자연스러운 일이다. 이미 많은 알고리즘이 인간 얼굴 등 특정 비정규 개체에 대해 사용 가능하지만, 이것은 여전히 일반적인 인식에 어려움이 있다. 이러한 유형의 방법은 초기 단계에 있지만, 그 잠재적 가치는 여전히 주목을 받을 만하다.

마커리스 방식은 미지의 현실 환경이나 실외 현실 환경(예를 들어 벽의 위치)을 감지해 이해하며, 환경에 대한 사전 지식이 필요하지 않아 대규모 모바일 AR을 효율적으로 촉진할 수 있다. 그러나, 주로 모바일 기기의 자원의 연산 비효율성과 한계 때문에, 마커리스 환경 인식의 핵심 부분인 동시 지역화·지도(SLAM)[26]를 모바일 AR에 채택하는 것은 더욱 어렵다. 현재 솔루션은 대부분 SLAM과 다른 센서 간의 협업에 의존하고 있다.

3) 하이브리드 추적 메커니즘: 하이브리드 모바일 AR 구현 메커니즘은 모바일 장치의 컴퓨팅 비효율성을 고려하면서 절충된 것이다. 앞서 언급한 개별 방법의 약점과 한계를 서로 다른 방법을 결합해 극복한다. 많은 애플리케이션이 이 접근법의 적합성을 입증했다[27]–[29]. 그것은 모바일 AR 어플리케이션을 설득력 있게 정밀하고 강력한 결과를 제공할 뿐만 아니라 계산 복잡성을 감소시킨다. 제한된 컴퓨팅 능력과 네트워크 성능을 고려할 때, 이 하이브리드 체계는 현재 대규모 모바일 AR의 프로모션에 중요한 역할을 할 것이다.

C. Challenges When AR Meets the Web
인텔리전스(AI) 칩, 모바일 기기의 컴퓨팅 능력이 크게 향상되어 기본적으로 모바일 AR 애플리케이션의 집약적인 컴퓨팅 요건(즉, 앱 기반 모바일 AR 구현)을 충족하고 있다.

그러나 실제의 경우 웹에서 AR 애플리케이션을 적용할 때 무시할 수 없는 몇 가지 과제가 남아 있다.

1) 제한된 컴퓨팅 성능과 강력한 컴퓨팅 요구사항 비교: 추적 및 등록은 AR 시스템의 두 가지 핵심 부분이며 또한 가장 계산 집약적인 부분이다. 기준 추적 방법은 단순한 매트릭스 작업만 필요하므로 웹 AR 애플리케이션에 정확하고 강력한 추적 접근법을 제공한다. 자연 형상 추적법은 기준 추적법보다 적용 범위가 넓다. 그러나, 웹 상의 비효율적인 컴퓨팅 능력은 그것을 실제 사례에서 적용하기 어렵게 만든다. 예를 들어 ORB[30]는 경량 CV 알고리즘으로서 웹 상에서 여전히 AR의 컴퓨팅 요건을 충족할 수 없다. 마커리스 모바일 AR 구현 방법의 경우, SLAM의 계산 복잡성을 줄이기 위한 노력이 이미 있었지만(예: ORB-SLAM [31]), 웹에 포팅하는 것은 여전히 어렵다. 웹 브라우저의 렌더링 기능이 제한되어 있기 때문에 웹 상에서 컴퓨팅이 어려울 뿐만 아니라 렌더링도 웹 AR의 또 다른 과제가 되고 있다. 더욱이 다양하고 비효율적인 컴퓨팅 플랫폼(예: 내장 브라우저)도 웹 AR의 성능 저하를 초래한다. 
앞에서 언급한 바와 같이, 특히 다가오는 5G 네트워크에서 컴퓨팅 집약적인 작업을 가속을 위해 에지 또는 원격 클라우드로 오프로드함으로써 웹 AR에 대한 효율적이고 유망한 접근 방식이 될 것이다(섹션 III-B 참조).

2) 네트워크 지연과 실시간 성능 요구사항 비교: 클라우드 서버는 항상 더욱 강력한 컴퓨팅 기능을 가지고 있으므로 웹 AR 애플리케이션을 위한 성능 향상을 제공한다. 그러나 AR은 계산 및 데이터 집약적인 애플리케이션이다. 컴퓨팅 작업을 클라우드로 오프로딩함으로써 대규모 통신 지연이 발생한다. 따라서 제한된 데이터 전송률과 허용할 수 없는 네트워크 지연으로 인해 현재의 모바일 네트워크가 실시간 운영(예: 추적 및 상호작용)을 지원하기는 어렵다. 웹 AR 애플리케이션은 모바일 네트워크에 더 많이 의존한다. 적응적이고 지능적인 네트워크 리소스 스케줄링(예: 5G 시대의 네트워크 슬라이싱)과 애플리케이션 특성에 따라 더욱 차별화된 웹 서비스 프로비저닝을 위한 기회를 제공하는 소프트웨어 정의 네트워크 및 네트워크 기능 가상화와 같은 고급 기술도 우리의 감쇠의 가치가 있다.tion. 연산 아웃소싱 외에도, 자급자족 솔루션도 중요하다. AI 칩 기술의 개발로 사용자 장비에서 연산을 완료할 수 있어 네트워크 전송으로 인한 추가 통신 지연을 피할 수 있다.


3) 배터리 용량과 극한의 에너지 소비 비교: 웹 AR은 전력이 많이 소모되는 애플리케이션이지만, 오늘날 대부분의 웹 AR 애플리케이션은 제한된 에너지 공급으로 어려움을 겪고 있다. 장기간에 걸쳐 센서들이 협력해야 할 필요성, 정보, 컴퓨팅, 통신, 디스플레이의 분석은 모바일 기기의 배터리에 엄청난 압력을 가한다. 그러나 모바일 장치의 현재 배터리는 전화와 인터넷 접속과 같은 일반적인 기능만을 위해 설계된다. 언급된 극단적인 에너지 소비는 일반적인 모바일 기기에 웹 AR의 배치를 크게 방해할 것이다. 계산 아웃소싱 메커니즘은 컴퓨팅 압력을 클라우드로 오프로드하여 최종 장치의 에너지 소비를 줄일 수 있지만, 네트워크 조건에도 영향을 미친다.


4) 다양한 기반구조를 가능하게 하는 동시에 지속적 추진의 필요성: 컴퓨팅과 디스플레이 플랫폼, 운영 체제, 심지어 데이터 포맷의 다양성은 심각한 호환성 문제를 야기한다. 앞에서 언급한 바와 같이, 많은 모바일 애플리케이션은 경량화를 위해 내장된 브라우저를 단순화하는 하이브리드 방식으로 설계된다. 그러나, 컴퓨팅 플랫폼의 다양성은 웹 AR의 광범위한 홍보를 방해한다. 게다가, 다른 센서와 디스플레이 플랫폼과 운영체제를 지원하는 것 또한 웹 AR의 개발을 어렵게 한다. 서로 다른 도구에 의해 생성된 가상 콘텐츠는 웹에서 사용하기 위한 호환성 문제에 직면해 있다는 점에 유의하십시오. 그러나 이러한 모든 양립가능성 과제는 학계, 산업계, 표준기관의 공동 노력이 요구된다.


D. Enabling Technologies for Web AR
오늘날 일부 첨단 웹 기술은 웹 AR의 기본 요건을 충족시키기 위해 등장하고 있으며, 더욱이 성능 개선 접근법도 제공하고 있다. 그림 6은 네 가지 주요 웹 지원 기술을 보여준다.

1) WebRTC [32]: 이 기술은 브라우저에 실시간 통신을 제공하며 웹 AR의 가장 중요하고 기본적인 기술 중 하나이다. 카메라는 웹 AR 애플리케이션에서 환경에 대한 추가 인식, 렌더링 및 기타 작업에 대한 기초를 제공하는 WebRTC 기술을 사용하여 비디오 스트림 형태로 주변 환경을 캡처한다. 오늘날 많은 브라우저들이 이미 이 기술을 지원했다. 웹RTC 기술은 비디오 캡처 외에도 현재 비디오 부호화, 암호화, 렌더링, 처리 등을 지원한다. 그러나 모바일 웹 플랫폼의 제한된 기능을 고려할 때 웹 AR을 위한 효율적인 WebRTC 솔루션은 여전히 주목할 가치가 있다.

2) WebAssembly [33]: 프로그래밍 과정을 단순화하고 기본 속도를 달성하기 위해, 최근에 등장한 WebAssembly는 웹에서 직접 실행될 수 있는 크기 및 시간 효율적인 바이너리 형식으로 절차(예: C, C++, Rust, Go)를 인코딩하여 웹에서 계산 가속 접근법으로 설계된다[34]. 메인스트림 브라우저(예: Chrome, Firefox, Safari)도 이 웹 기술을 지원하기 시작했다. WebAssembly는 JavaScript의 병목현상을 해결하여 큰 우려를 낳았다. 웹 AR 애플리케이션 성능을 개선할 뿐만 아니라 개발 프로세스를 현재 성숙한 CV 알고리즘(예: OpenCV.js [35], [36], OpenCV WebAssembly 버전)과 밀접하게 연관시킬 수 있다. WebAssembly의 등장은 웹 플랫폼에 혁명을 가져올 것이다 [37].

3) 웹 Workers [38]: 이것은 자바스크립트에 멀티스레드 기술을 도입한다. 작업자 스레드를 활용하여 비동기식으로 병렬 컴퓨팅, 렌더링, 리소스 로딩 등을 달성하고, 더욱이 이미 HTML5 규격의 일부가 되었다. 또 다른 컴퓨터 가속 접근방식으로서, 웹 작업자는 3-D 모델 사전 다운로드 및 병렬 형상 지점 일치와 같은 웹 AR 애플리케이션의 프로그램 병렬화를 위한 간단한 방법을 제공한다. 웹 AR 애플리케이션에서 시간과 리소스가 많이 소요되는 작업을 스케줄링하고 균형을 유지함으로써 사용자에게 특히 현재의 모바일 네트워크에서 더 나은 경험을 제공할 수 있다.

4) WebGL [39]: 이것은 웹에서 하드웨어 기반(GPU) 렌더링 가속 접근법을 제공한다. 이미지 처리는 컴퓨팅 자원의 엄격한 요건을 가지고 있기 때문에, 효율적 컴퓨팅 플랫폼은 컴퓨팅 집약적인 애플리케이션에 중요하다. 대화형 2-D 및 3-D 그래픽 렌더링을 위한 효율적인 JavaScript API 집합을 이 라이브러리에서 사용할 수 있다. 모바일 기기에서 GPU를 사용하면 웹에서 AR을 보다 부드럽고 실감나게 표시할 수 있다. 또한, 언급할 가치가 있는 것은 웹GL 기반의 자바스크립트 라이브러리인 Three.js [40]이다. 이 라이브러리는 개발자들이 웹GL을 사용하여 브라우저에서 2-D 및 3-D 그래픽으로 작업할 수 있도록 도와준다. WebGL 2 사양은 2017년 1월에 완료되었으며, 이 기술은 현대 브라우저에서 널리 지원되고 있다.
앞에서 언급한 이러한 기술의 지속적인 발전은 웹 AR 애플리케이션의 기초를 제공하며, 보다 일반적으로 웹 기반 애플리케이션의 혁신에도 동기를 부여할 것이다. 한편, 이러한 어플리케이션들은 새로운 웹 기술을 추가로 발생시킬 것이다.

III. DIFFERENT WEB AR IMPLEMENTATION APPROACHE S
모바일 기기에서 AR의 잠재력을 탐구하기 위해, 학계와 업계 모두 현재 모바일 AR 애플리케이션의 사용자 경험과 웹 브라우저의 제한된 기능 사이의 차이를 보완하기 위해 보다 효율적인 구현 접근법을 모색하고 있다. 모바일 AR의 한 분야인 웹 AR은 최근 가볍고 크로스 플랫폼으로 많은 관심을 끌었다. 서로 다른 컴퓨팅 패러다임에 따라, 우리는 다음과 같이 웹 AR 구현 접근법을 두 가지 유형으로 분류할 수 있다.

1) 자체적인 방법은 모바일 기기의 모든 작업을 로컬에서 실행한다(즉, 오프라인 접근). 이 방법의 장점은 이동 통신망에 덜 의존하기 때문에 실시간 추적 성능이 추가적인 통신 지연에 의해 저하되지 않는다는 것이다. 그러나, 모바일 기기의 비효율적인 컴퓨팅 능력은 치명적인 결함이 된다. 현재의 모바일 기기는 여전히 특히 웹 상에서 이러한 작업을 잘 수행할 수 없다.

2) 컴퓨팅 아웃소싱 방식은 클라우드 서버의 컴퓨팅 및 스토리지 기능을 활용하며, 대개 앞서 말한 자체 제공 방식보다 더 나은 사용자 환경을 제공할 수 있다. 그러나, 이 방법은 모바일 네트워크에 대한 의존도가 강하므로, 웹 AR 애플리케이션의 성능은 네트워크 조건에 의해 쉽게 영향을 받는다.

A. Self-Contained Method
자급식 방법에 대한 두 가지 주요 구현 접근법이 있다. 하나는 웹 상에서 모바일 AR 서비스를 제공하기 위해 순수 자바스크립트 기반의 라이브러리나 플러그인을 개발하는 것이다. 다른 하나는 웹 AR 애플리케이션 성능을 향상시키기 위해 브라우저 커널을 확장하는 것이다. 우리는 이제 이 두 가지 접근법을 자세히 설명하겠다.

1) 순수 자바스크립트 라이브러리/플러그인: 앞에서 언급한 바와 같이, 기준 추적에 기초한 모바일 AR 구현 방법은 낮은 계산 복잡성으로 인해 항상 정확하고 강력한 식별 및 추적 성능을 제공할 수 있다. JS-ArUco[43](ArUco의 JavaScript를 위한 포트), JSARToolkit [44](원래 ARToolKit[45] 기준), JSARToolKit5(ARToolKit의 emscripten 포트) 등 웹에서 AR 서비스를 지원하기 위한 전용 JavaScript 라이브러리/플러그인이 이미 많이 이용 가능하다. 현재 기술 상태는 새로 제안된 AR.js [41]로, 모든 플랫폼과 WebRTC 및 WebGL로 모든 브라우저에서 작동할 수 있는 Three.js 및 JSARToolKit5 기반의 웹 AR 솔루션이며, Nexus 6P에서 안정적이고 60프레임/s의 프레임을 달성할 수 있다. 그러나 현재 AR.js는 단순한 매트릭스 작업만 수반하기 때문에 기준 마커만 지원할 수 있다. AR.js가 자연 피쳐 객체를 지원하는 것은 여전히 어려운 일이다. Awe.js [42]는 또 다른 웹 AR 구현이다. 즉, 자연 형상 추적(2-D 영상)에 기초한 구현이며, 일부 실험 시도는 적합성을 입증했다. 그러나 웹의 비효율적인 컴퓨팅 능력은 3-D 객체 및 마커리스 웹 AR 구현 방법은 말할 것도 없고 웹 AR 애플리케이션의 복잡한 계산 요구 때문에 상당한 추적 오류를 초래한다. 게다가, 내장된 브라우저를 포함한 브라우저의 다른 컴퓨팅 능력에 관한 앞에서 언급한 호환성 문제 역시 웹 AR의 보급과 대규모 홍보를 어렵게 한다.

(Keras.js)
전통적인 CV 방법[46]–[48] 외에도, 심층 학습에 기초한 알고리즘은 최근 몇 년 동안 많은 관심과 개발 노력을 받았다. ConvNetJS[49], Caffe와 같은 웹 기반 신경 네트워크 알고리즘JS [50], WebDN [51], deeplearn.js [52], TensorFlow.js [53]는 웹 상에서 이미지 분석 및 처리를 위한 새롭고 교차 플랫폼 접근법을 제공한다.
구체적으로는, 이러한 수용 가능 기술은 다양한 웹 AR 애플리케이션에서 일반화된 객체 감지, 인식 및 추적을 위해 더욱 설계될 수 있으며, 이는 지능적인 컨텍스트 인식 능력과 정확한 비전 기반 추적 능력을 제공하며, 따라서 카파브를 크게 향상시킬 수 있다.웹 AR의 기능. 그러나, 그 모델들의 크기는 여전히 그것의 확산적인 적용에 장애물이다. 예를 들어, Caffe의 GoogleLeNet[54] 모델 크기JS는 최대 28MB로 웹 사용자에게는 허용되지 않는다. 더욱이, Forward pass3의 시간은 특히 웹 상에서 모바일 AR 어플리케이션의 실시간 요구조건에 대한 도전이기도 하다. 따라서 모델 압축 및 추론 가속 문제는 웹 AR 실용화를 위해 [55]–[58]가 발생한다.

2) 브라우저 커널 확장: 요즘 웹브라우저는 사용자들이 인터넷을 연결하기 위한 중요한 입구다. 브라우저 커널을 AR 지원으로 확장함으로써 웹 AR 애플리케이션은 종종 모바일 장치에서 거의 네이티브에 가까운 성능을 얻을 수 있으며, 따라서 더 나은 사용자 환경을 경험할 수 있다. RWWW 브라우저 [59], Wikitude [60], Argon 프로젝트 [61]와 같이, 이러한 Web AR 구현 접근법의 잠재력을 탐구하기 위한 학계와 업계의 노력이 이미 있었다. Mozilla와 Google의 기술 상태는 Project WebXR Viewer [62] 및 WebARonARKit 및 웹ARonARCore [63]. 이러한 노력은 웹 AR 개발자들에게 표준 환경을 제공하는 것을 목표로 한다. 그러나 아직 걸음마 단계여서 대규모로 실제 적용되지는 않았다. 모질라와 구글 외에도, 웹과 AR 사이의 격차를 줄이기 위해 노력하는 다른 회사들도 있다. Baidu와 Tenent는 2017년에 웹 AR 솔루션을 제안하였다. 즉, 각각 DuMix AR[64]과 TBS AR[65]이다. 그림 8은 TBS AR 시스템 아키텍처를 예시하고 있다. 브라우저-커널 확장 솔루션은 순수 자바스크립트 라이브러리/플러그인 방식과 비교하여 유망하고 강력한 자체 포함 웹 AR 구현 솔루션을 제시한다. 그러나 AR 지원 브라우저의 표준화가 완료되기 전에, 다른 브라우저 커널 확장 솔루션이 제안한 API의 다양성은 반대로 웹 AR 애플리케이션의 대규모 홍보를 제한할 것이다. 다행히도 일부 표준화 노력은 이미 시작되었다(WebXR 편집기 초안, W3C, 2018년 3월 7일).

B. Computation Outsourcing
브라우저-커널 확장 방식은 다른 자체 포함 웹 AR 구현 솔루션(즉, 순수 자바스크립트 라이브러리/플러그인)과 비교했을 때 건너뛰기 형식의 성능 향상을 달성하지만, 제한된 연산 능력 때문에 모바일 기기에 의한 복잡한 환경의 인식에는 여전히 어려움이 있다. 웹 AR 구현 메커니즘의 또 다른 유형은 계산을 아웃소싱하는 것이다. 계산적으로 집약적인 작업을 클라우드 서버에 아웃소싱함으로써 웹 사용자들은 더 나은 AR 경험을 얻을 수 있으며, 이는 서버의 더 강력한 컴퓨팅 기능으로부터 이익을 얻을 수 있다. 한편, 모바일 기기의 컴퓨팅 능력 요건도 감소하고, 따라서 웹 AR의 추진의 문턱도 낮아진다. 그러나 추가 통신 지연과 배치 비용은 동시에 우리의 관심을 받을 만한 두 가지 중요한 사안이다.

네트워크 기술의 발전은 컴퓨팅 집약적인 작업을 클라우드 서버에 아웃소싱하는 것뿐만 아니라 더 나은 AR 경험과 에너지 절약을 위한 협업 컴퓨팅을 달성하는 것을 가능하게 한다. 새롭게 부상하는 5G 네트워크는 1Gb/s의 데이터 전송 속도와 밀리초 단대단 지연을 달성할 수 있으며, 더욱이 D2D 기술은 단거리 통신을 지원한다. 이러한 모든 기능은 웹 AR의 광범위한 홍보 및 성능 향상을 위한 기회를 제공한다.

또 다른 중요한 문제는 계산 아웃소싱 방법의 오프로드 전략에 있다. 따라서 클라우드 서버 구축에 따른 높은 금전적 비용을 고려할 때 합리적인 서비스 구축과 연산 오프로드 방법이 필요하다. 오늘날에는 적응적 컴퓨팅 패러다임을 실현하고 인터넷의 자원 활용을 최적화하기 위해 웹 AR의 구축에 사용할 수 있는 다양한 오프로드 프레임워크[66]–[69]와 접근법(예: 게임 이론, 정수 선형 프로그래밍 및 다계층 의사결정 이론, 강화 학습)을 이용할 수 있다.

계산 아웃소싱 메커니즘은 웹 AR에 대한 대체 서비스 프로비저닝 패러다임을 제공한다. 이 절에서는 백엔드와 협업이라는 두 가지 종류의 계산 아웃소싱 기반의 웹 AR 구현 방법이 논의될 것이다. 


1) 백엔드 솔루션: 모바일 기기(예: 스마트폰 또는 AR 글라스)에 비해 원격/에지 클라우드에 있는 서버는 항상 더 강력한 컴퓨팅, 렌더링 및 스토리지 기능을 갖추고 있어 복잡한 작업을 보다 빠르고 효율적으로 처리할 수 있다. 다양한 서버 배치 방법에 따라 백엔드 솔루션을 클라우드 컴퓨팅 기반 및 에지 컴퓨팅 기반 솔루션으로 분류할 수 있음

a) 모바일 클라우드 컴퓨팅 기반 솔루션: 이러한 유형의 솔루션은 프로세스 가속화를 위해 컴퓨팅 또는 렌더링 작업을 원격 클라우드 서버로 오프로드합니다. 따라서 모바일 기기의 연산 압력을 완화할 뿐만 아니라 웹 AR 애플리케이션의 성능도 향상된다. 많은 모바일 AR 애플리케이션[71]–[75]은 이러한 계산 아웃소싱 패러다임에서 많은 혜택을 받았다. 하지만 여전히 무시할 수 없는 이슈들이 있다.

1) 대역폭 도전: 연속 영상/영상 전송은 네트워크 대역폭의 상당 부분을 차지하고 있어 코어 네트워크에 나쁜 영향을 미친다.


2) 지연 과제: 데이터 전송으로 인한 통신 지연이 추가되고, 무선 환경이 불안정해 웹 AR 애플리케이션의 성능도 저하된다.

다가오는 5G 네트워크는 더 높은 대역폭과 더 낮은 네트워크 지연을 제공할 것이고, 따라서 그들은 계산 아웃소싱의 경우에 웹 AR 애플리케이션의 성능을 효율적으로 최적화할 것이다. 또 다른 중요한 문제는 중앙 집중식 서비스 제공의 경우 높은 동시성에 의해 야기되는 처리와 비용 압박이다. 대표적인 WebRTC 미디어 서버 구현 중 하나인 Kurento [76]이 그 예로서 웹 AR에 사용될 수 있다. 시스템의 인코딩 및 디코딩(640 × 480 픽셀) 프로세스만 CPU의 약 20%를 차지하며, 4 동시성 요구 사항에 따른 비용 부담은 말할 것도 없다.


b) 멀티액세스 에지 컴퓨팅 기반의 솔루션 추진: 5G 네트워크의 MEC 패러다임은 앞서 언급한 중앙 집중식 솔루션이 직면한 대역폭과 지연 시간을 고려하여 대체 웹 AR 서비스 프로비저닝 메커니즘을 제공한다. 한편, 웹 AR 애플리케이션에서 위치결정 기법 또는 카메라 뷰를 통한 실시간 포즈 추정은 컴퓨터 플랫폼에 엄격한 요건을 부과한다. 한편, "가상 컨텐츠"는 사용자 환경(즉, "실제")과 항상 관련된다. 클라우드 대신 MEC 플랫폼에서 AR 서비스를 호스팅하는 것이 다음과 같이 유리하다.

1) 컴퓨팅 측면에서: 서비스 품질 향상을 위해 MEC 플랫폼에서 포즈 추적 및 렌더링을 수행할 수 있다.

2) 캐싱 측면: 에지 노드에 대한 고도로 현지화된 보완 정보를 통해 시스템의 전체 스토리지 효율성을 향상시키십시오.

웹 AR 서비스를 원격 클라우드에서 사용자에게 더 가까운 네트워크 에지로 마이그레이션함으로써, 이러한 유형의 솔루션은 통신 지연을 줄일 뿐만 아니라 코어 네트워크의 대역폭 사용도 동시에 경감한다. 또한 이 MEC 기반 솔루션은 메트릭스 수집, 익명화된 메타데이터 등의 이점을 가지고 있어 추가적인 사용자 경험 최적화를 위한 기반을 제공한다. 오늘날, 일부 노력은 이미 모바일 AR 애플리케이션을 위한 에지 컴퓨팅의 잠재력을 탐구하기 시작했고, 예를 들어 원격 라이브 지원과 같은 긍정적인 결과를 얻었다[77]. 단순성을 위해 여기서는 Cloudlet [78]과(와) 새롭게 등장한 안개 컴퓨팅 패러다임[79]-[81]을 본 논문에서 특정 유형의 MEC 방법으로 분류한다. ETSI는 2015년에 이미 MEC 기반 AR 서비스 프로비저닝 시나리오[15]를 스케치했으며, 5G 네트워크의 일반 분산 네트워크 토폴로지[70]는 그림 9에 나타나 있다. 한편, 이러한 유망한 컴퓨팅 패러다임에 대해서는 이미 약간의 노력이 있다[82]–[88]. 5G 네트워크에서 MEC 기술의 기본적 지원 때문에 웹 AR 서비스의 개발이 쉽고 편리해질 것이다.

2) 협업 솔루션 추진: 전술한 자체 포함 웹 AR 구현 방법은 제한된 컴퓨팅 능력에 직면하여 광범위한 응용을 제한한다. 더욱이, 컴퓨팅 플랫폼의 다양성은 적응적 컴퓨팅 자원 스케줄링 메커니즘의 부족으로 인해 웹 AR의 광범위한 홍보를 방해한다. 모바일 클라우드 컴퓨팅과 MEC 기반 구현 방법이 더 강력한 컴퓨팅 기능을 제공하지만, AR은 컴퓨팅 및 데이터 집약적인 애플리케이션이며, 따라서 웹 AR 성능 향상, 대역폭 사용, 통신 지연 및 구축 비용이 높을 경우 모두 우리의 주의를 끌 만하다.요구 조건을 충족시키다 한편, 모바일 기기의 발전은 또한 지역적으로 컴퓨터 작업을 수행하는 것을 가능하게 하며, 현재의 모바일 기기가 지나치게 복잡한 컴퓨터 작업을 감당할 수는 없지만, 웹 AR에 대한 협업 분산 컴퓨팅의 잠재력을 탐구하기 위한 추가 연구를 수행하도록 장려한다. 분산되고 다양한 컴퓨팅 및 스토리지 리소스를 최대한 활용하려면 적응적이고 확장 가능한 협업 컴퓨팅 및 통신 패러다임이 필요하다. 웹 AR 애플리케이션의 성능 요구사항과 사용자 경험을 충족시키면서 클라우드 서버에서 모바일 장치 및 네트워크 에지로 컴퓨팅 압력을 분산시킴으로써 분산된 리소스를 효과적으로 수집한 다음 비용 절감과 추가적인 성능 향상을 달성할 수 있다.


오스모틱 컴퓨팅[89]–[91]은 고도로 분산되고 연합된 컴퓨팅 환경을 용이하게 하는 것을 목표로 하는 새로운 컴퓨팅 패러다임이다. 상호 연결된 클라우드 데이터 센터와 에지 데이터 센터를 통해 마이크로소버를 자동으로 구축할 수 있다. 한편, 제안된 역방향 오프로드 방법, 즉 클라우드에서 네트워크 가장자리로의 기능 이동은 지연 시간에 민감한 애플리케이션에 도움이 될 뿐만 아니라 네트워크를 통해 전송되어야 하는 데이터의 양을 최소화한다. 따라서 이러한 적응적이고 확장 가능한 패러다임은 분산된 협업 웹 AR 구현에 있어 유망한 방향이 될 것이다.

a) 터미널 + 클라우드 협업 솔루션: 삼투압 컴퓨팅 패러다임의 역방향 오프로딩 방식은 웹 AR의 계산 작업의 일부를 클라우드에서 사용자 장치로 오프로드하여 중앙 사이트에 대한 컴퓨팅 및 구축 비용 부담을 완화하도록 장려한다. 위챗(WeChat, 2017년 12월 514일)이 차이나모바일(China Mobile)을 위한 실제 웹 AR 광고 캠페인을 진행했는데, 웹 AR을 대규모로 홍보한 것도 처음이다. 불과 10일 만에 3 550 162페이지의 조회수를 기록하고 2 080 396명의 독보적인 방문자를 얻는다. 이 프로젝트에서 웹 AR 서비스 프로비저닝 메커니즘은 두 부분으로 설계되었다. 모든 시각적 연산은 JSFeat의 ORB 알고리즘에 기반하여 모바일 장치에서 로컬로 실행된다. 원격 클라우드 서버는 데이터베이스 쿼리 또는 기타 논리적 작업을 담당한다. 터미널(모바일 기기)의 컴퓨팅 성능과 클라우드 서버의 스토리지 기능 간의 협업은 웹 AR 애플리케이션의 전체 구축 비용을 크게 절감한다. 그러나, JSFeat의 선택은 더 많은 웹 사용자들에게 도달하기 위해 컴퓨팅 능력 요건의 임계값을 줄이는 것을 목표로 하기 때문에, 그것은 애플리케이션의 성능을 훼손하기 때문에, 성능 최적화를 위한 많은 여지가 여전히 있다. 양 외 [92] 단말기와 클라우드 사이의 데이터 스트림 애플리케이션에 대한 연산 분할 최적화에 대해 논의하였다. 그 결과는 합리적인 계산 오프로드 방법이 애플리케이션의 성능에 큰 이점을 제공한다는 것을 보여준다. 더욱이, 모바일 기기의 다양한 계산 능력에 따라, 적응적이고 확장 가능한 계산 오프로드 방법은 인터넷에서 분산된 자원을 보다 유연하고 지능적으로 스케줄링할 수 있으며, 이러한 유형의 협업 웹 AR 구현 솔루션에는 개인화된 컴을 수행할 수 있기 때문에 중요하다.그림 11(a)와 같이 putation 파티셔닝을 통해 웹 AR 애플리케이션에 대한 개별 사용자 환경을 최대화하십시오.

b) 터미널 + Edge + 클라우드 협업 솔루션:
또 다른 유망하고 효율적이지만 복잡한 방법은 모바일 장치, 네트워크 에지 및 원격 클라우드 서버의 컴퓨팅 및 스토리지 기능을 결합하여 보다 적응적이고 확장 가능한 협업 웹 AR 구현 방법을 탐색하는 것이다. 

일반적으로 모바일 기기의 도입은 가장자리 및 클라우드 서버의 컴퓨팅 압력을 완화한다. 네트워크 가장자리는 웹 AR 애플리케이션 마이그레이션을 위한 임시 공간을 제공하며, 모바일 장치의 컴퓨팅 기능을 보완할 뿐만 아니라 데이터 전송을 단축한다. 원격 클라우드 서버는 더 강력한 컴퓨팅 캡을 가지고 있다.능력 및 적절한 스토리지 공간, 일반적으로 데이터베이스 쿼리, 과거 빅데이터 기반 모델 교육 및 기타 작업을 담당한다. 

스마트 시티, 스마트 홈 및 스마트 장치의 진전에 따라 이 협업 웹 AR 구현 솔루션에 대한 지침을 제공하는 전술한 삼투적 컴퓨팅 패러다임 외에도, 사용자의 주변 환경이 강력해지고 지능화되고 있으며, 모바일 기기의 자본 확충에 도움이 되는 협업 솔루션이 있다.s는 보다 유연한 방식으로 웹 AR의 홍보를 더욱 촉진한다. 그림 11(b)와 같이 기기는 셀 또는 WLAN 기술을 통해 통신하여 보충 정보(예: 3-D 모델, 사운드 및 비디오)를 공유하고 웹 AR 애플리케이션도 함께 수행한다. 게다가, 이 단거리 무선 통신 기술은 멀티플레이어 온라인 AR 게임과 같은 협력적인 다중 사용자 웹 AR 어플리케이션에도 사용될 수 있지만, 중앙 사이트에 약간의 성능 영향만 가한다. 

다가오는 5G 네트워크는 D2D 기술의 지원을 약속하며, 웹 AR은 점점 더 많은 시나리오(예: 박물관, 미술관, 도시 기념물)에서 이 기술의 혜택을 받을 것으로 보인다. 시범적으로, 우리는 동물원의 관광객을 위한 웹 AR 기반의 동물 검색 애플리케이션을 구현했는데, 이 애플리케이션은 5G 네트워크에서 분산된 DNN(Deep Nergency Network)과 evalua를 활용한다.5 최종 장치 및 네트워크 에지 서버는 DNN(AlexNet [93]) 계산의 전체 72.2%(17.6% + 54.6%)를 차지한다(즉, 중앙 사이트의 완화 연산 압력). 

특정 신경 네트워크 계산은 웹에서 추론 가속을 달성하기 위해 미리 와스 형식으로 인코딩된다는 점에 유의하십시오. 한편, 이 협력적 해결책은 또한 약 319의 응답 지연 개선을 가져온다.순수 프런트 엔드(크롬) 기반 솔루션과 비교했을 때 26% 분명히, 협업 컴퓨팅 아웃소싱 솔루션의 경우, 기기의 다양한 가용 컴퓨팅 및 스토리지 리소스를 보다 지능적으로 조정할 수 있기 때문에 적응 가능하고 확장 가능한 스케줄링 방법은 항상 웹 AR 애플리케이션에 도움이 될 것이다.

C. Technology Readiness Levels

이전의 진술에 기초하여, 우리는 그림 12와 같이 웹 AR 구현 메커니즘과 접근방식의 기술 준비 수준을 요약하고 비교한다. 분명히 웹 AR은 아직 걸음마 단계여서 학계와 업계 모두의 노력이 필요하다.

컴퓨팅 능력, 네트워킹, 배터리 용량 및 호환성의 문제를 고려할 때, 웹 AR에 대한 보급 촉진 및 응용은 여전히 현재 모바일 네트워크에서 어렵다. 1) 센서 기반 구현 메커니즘은 피할 수 없는 누적 오류로 인해 사용자에게 매끄러운 몰입 경험을 제공할 수 없다. 그리고 2) 현재 브라우저-kernel 확장 솔루션에는 교차 플랫폼 지원이 없다. 하지만 웹 AR의 미래는 우리의 기대를 받을 만하다. 

경량 및 교차 플랫폼 웹 AR 기술은 특히 네트워크의 개발과 모바일 기기 성능 향상으로 많은 분야에서 광범위한 애플리케이션을 가지고 있다. 기반 기술의 발전과 애플리케이션의 혁신은 상호 촉진이며, 그것들은 결국 웹 AR 생태계의 개발을 촉진할 것이다.

IV. OPEN RESEARCH CHALLENGES

웹 AR의 출현은 의심할 여지 없이 모바일 AR 어플리케이션의 대규모 판촉에 도움이 된다. 그러나, 적절한 기술이 이용가능하고 저렴하게 제공되기를 기다리는 다양한 장애물들이 여전히 있다. 웹 AR의 실용적 개발과 구축은 우리에게 많은 영감을 주었다. 이 절에서는 이러한 통찰력을 상세히 설명하고 추가 논의도 제공한다.


A. Computation and Rendering Efficiency
AR은 연산 및 데이터 집약적인 애플리케이션이다.
그러나 오늘날 웹 AR의 컴퓨팅과 렌더링 작업 모두 모바일 기기의 제한된 계산 및 저장 능력으로 인해 비효율적인 런타임 환경에 직면하고 있다.

1) 전산효율 : 전술한 자체적·협력적 컴퓨팅 아웃소싱 웹 AR 구현 접근방식을 고려할 때, 모바일 기기의 연산 및 렌더링 능력은 웹 AR 애플리케이션의 성능 향상에 중요한 역할을 한다. 여기 그들의 실적 개선을 위한 몇 가지 제안이 있다.

1) WebAssembly, Web Workers 및 기타 유사한 활성화 웹 기술은 Web AR 애플리케이션의 성능 향상에 도움이 된다. WebAssembly는 높은 수준의 코드를 미리 바이너리 형식으로 변환하여 웹 AR 프로세스를 가속화할 수 있으며, 이는 동시에 코드 압축의 이점도 가지고 있다. WebSight [94] 프로젝트에서 WebAssembly가 약 10배 향상된 성능을 제공할 수 있음을 증명함

순수한 자베스크립트를 넘어 또한, 멀티스레드 기술의 도입은 웹 AR 애플리케이션에서 Web Workers 기술을 사용함으로써 프로그램의 전체적인 효율성을 효과적으로 향상시킬 수 있다. 

2) JSFeat, JSARToolKit, 심지어 첨단 AR.js 등 어느 쪽이든 자연적 특징 추적 기반 및 마커리스 웹 AR 구현 방법에는 명백한 성능 약점이 있다. 즉, 웹 AR 애플리케이션 성능을 향상시키려면 보다 효율적인 컴퓨팅 패러다임과 웹 AR 관련 JavaScript 라이브러리/플러그인에도 주의를 기울여야 한다. 

3) 대략적인 컴퓨팅은 시도해 볼 가치가 있는 또 다른 방법이다. 웹 AR 애플리케이션의 성능은 알고리즘의 복잡성을 줄임으로써 개선할 수 있다. 일부 노력[95]–[97]은 이미 부정확한 운영(예: 영상 인식 및 동작 감지)의 허용이 웹 AR 사용자 경험 향상에 도움이 될 수 있는 이 컴퓨팅 패러다임의 타당성을 입증했지만, 대략적인 컴퓨팅에 대한 추가 조사의 여지가 여전히 많다. AR.

4) 또 다른 제안은 앞에서 언급한 계산 아웃소싱 웹 AR 구현 접근법이다.
백엔드 솔루션과 협업 솔루션 모두 더 나은 사용자 환경을 제공할 수 있다. 컴퓨팅 및 스토리지 리소스를 지능적인 방식으로 완벽하게 예약하고 활용할 수 있으므로 적응 가능하고 확장 가능한 협업 전략은 전체 웹 AR 애플리케이션 프로비저닝 프레임워크에 도움이 될 것이다.


2) 렌더링 효율성 : 렌더링 효율은 또 다른 관심 영역이다. 컴퓨터가 생성하는 가상 콘텐츠(예: 3-D 모델)는 현재 웹 상에서 회전 및 확장 작업과 같은 사용자와의 단순한 상호 작용만 지원할 수 있다. 실제로 복잡한 3-D 모델은 클라우드/네트워크 가장자리로부터 다운로드 시간을 추가할 뿐만 아니라 모바일 장치의 컴퓨팅 부담을 증가시킨다. 더욱이 렌더링 시간이 길어질수록 웹 AR 애플리케이션의 사용자 경험도 저하될 것이다. 장 외 [98] Mobile AR 애플리케이션의 각 부분의 시간과 에너지 소비량을 분석하여 3-D 모델의 복잡성이 증가함에 따라 렌더링 부분의 비율도 증가할 것이라고 언급했다. 예를 들어, 4 또는 5 MB보다 큰 3-D 모델은 우리의 실험 프로젝트에 심각한 지연 현상을 초래하고 웹 AR 애플리케이션 성능을 더욱 저하시킬 것이다. 모바일 AR, 특히 웹 AR 애플리케이션은 더 가벼운 3-D 모델 또는 웹 AR 전용 경량 3-D 모델 형식이 필요한 것은 분명하다. 모델 압축 기술은 다운로드 시간만 단축시킬 수 있다. 모바일 장치의 렌더링 작업은 여전히 많은 CPU, 메모리 및 배터리 리소스를 소비한다. 또한 최적화된 렌더링 기법이나 GPU 기반 렌더링 방법도 웹에서 렌더링 효율성을 개선할 수 있다.

한편, 최첨단 시각 주의 메커니즘[99]을 사용함으로써, 시야에서 사용자의 주의 부분만 증강되어, 렌더링의 복잡성도 감소하게 된다.


B. 네트워크 통신 효율성
웹 AR의 또 다른 중요한 문제는 네트워크 요구사항이다. 사용자 경험의 높은 품질을 달성하기 위해, 일반적으로 컴퓨팅 집약적인 작업은 모바일 기기의 제한된 컴퓨팅 및 렌더링 기능을 고려하여 성능 향상을 위해 클라우드/네트워크 에지 서버에 아웃소싱된다. 전술한 MEC 패러다임은 웹 AR 애플리케이션의 통신 지연을 더욱 낮출 수 있다. 그러나 엣지 컴퓨팅 시스템의 구축은 통화 비용이 많이 들고, 인프라가 현재 3G/4G 이동 통신망에서는 아직 대중화되지 않았다. 보다 현실적인 방법은 컨텐츠 제공 네트워크와 데이터 센터와 같은 현재 이용 가능한 네트워크 기술을 이용함으로써, 현재의 이동 통신망 하에서의 웹 AR 애플리케이션에 대한 사용자의 수요 증가와 계산 아웃소싱 방법 사이의 차이를 보완하는 것이다. 곧 출시될 5G 네트워크와 새롭게 부상하는 기능들은 웹 AR의 홍보를 위한 새로운 기회를 제공할 것이다. 네트워크 슬라이스 기술은 보다 합리적인 네트워크 자원 스케줄링 메커니즘을 제공하며, 따라서 웹 AR을 위한 더 나은 네트워크 환경을 제공할 것이다.
MEC 및 D2D 기술은 적응적이고 확장 가능한 컴퓨팅 및 통신 패러다임에 기반하여 웹 상에서 서비스 프로비저닝을 보다 유연하게 지원할 것이다.

C. 에너지 효율
AR 애플리케이션은 환경 인식, 상호작용 인식 및 인터넷 연결에 대한 장기적인 협력이 필요하다. 이러한 모든 전력 소모가 많은 작업은 모바일 장치의 배터리에 엄청난 압력을 가한다. 그러나 현재 배터리는 일반적인 기능만을 위해 설계되어 있다. 웹 AR 애플리케이션이 모바일 기기에 미치는 악영향을 줄이기 위해서는 에너지 효율도 무시할 수 없는 중요한 부분이다. 멀티코어 CPU는 주파수와 전압이 낮기 때문에 단일 코어 CPU보다 에너지를 적게 소비하며, 모바일 장치에 사용할 수 있는 기성 멀티코어 CPU 프로세서가 이미 많이 있다. 웹 AR 애플리케이션의 작업을 다중 코어에 병렬화하면 에너지 소비량을 줄일 수 있다. 

더욱이, 다가오는 5G 네트워크는 또한 네트워크 지연 시간과 데이터 전송 비용을 모두 최적화할 수 있기 때문에 간접적으로 에너지 절약에 도움이 될 수 있다.

D. 호환성
웹 AR은 AR 애플리케이션의 광범위한 홍보를 달성하기 위해 경량 교차 플랫폼 Mobile AR 구현으로 설계되었다. 그러나 호환성 문제도 현재 가장 심각한 문제 중 하나이다.

1) 기술 호환성 활성화: 네이티브 브라우저(예: Chrome, Firefox, Safari)와 애플리케이션이 하이브리드 방식으로 설계된 내장 브라우저(예: Facebook, Twitter, WeChat)를 포함한 다양한 브라우저들은 WebAssembly, WebGL, WebRTC, s 등과 같은 모든 유형의 웹 AR 지원 기술과의 지원 및 호환성에 큰 차이를 보인다.o on. 이것은 웹 AR 애플리케이션의 대규모 홍보를 방해할 뿐만 아니라 프로그램 개발의 어려움도 증가시킨다.

2) 웹 AR Browser 호환성: 웹 AR용 브라우저의 표준화 부재는 또 다른 호환성 문제를 야기한다. 현재 모든 전용 웹 AR 브라우저는 서로 격리되어 있으며, 특정 웹 브라우저를 기반으로 설계된 AR 애플리케이션은 다른 플랫폼에서 액세스할 수 없다. W3C 그룹은 최근에 약간의 노력을 기울였고 [100] 사용자들의 웹 AR에 대한 열정이 계속 증가함에 따라 표준화도 주의가 필요하며, 이는 학계와 업계 모두의 공동 노력이 필요하다.

3) 3-D 모델 형식 호환성: 또한 서로 다른 도구(예: 3DMax, MAYA, Blender)에 의해 생성되는 3.j와 웹 3-D 모델 간의 호환성 문제가 있어 웹 AR 애플리케이션의 애니메이션 효과 저하를 초래한다. 교차 플랫폼의 목적을 위해, 웹 3-D 모델 포맷의 표준화는 D이다. 호환성 웹 AR은 AR 애플리케이션의 광범위한 홍보를 달성하기 위해 가볍고 플랫폼 간 모바일 AR 구현으로 설계되었다. 그러나 호환성 문제도 현재 가장 심각한 문제 중 하나이다.

1) 기술 호환성 활성화: 네이티브 브라우저(예: Chrome, Firefox, Safari)와 애플리케이션이 하이브리드 방식으로 설계된 내장 브라우저(예: Facebook, Twitter, WeChat)를 포함한 다양한 브라우저들은 WebAssembly, WebGL, WebRTC, s 등과 같은 모든 유형의 웹 AR 지원 기술과의 지원 및 호환성에 큰 차이를 보인다.o on. 이것은 웹 AR 애플리케이션의 대규모 홍보를 방해할 뿐만 아니라 프로그램 개발의 어려움도 증가시킨다.

2) 웹 AR Browser 호환성: 웹 AR용 브라우저의 표준화 부재는 또 다른 호환성 문제를 야기한다. 현재 모든 전용 웹 AR 브라우저는 서로 격리되어 있으며, 특정 웹 브라우저를 기반으로 설계된 AR 애플리케이션은 다른 플랫폼에서 액세스할 수 없다. W3C 그룹은 최근에 약간의 노력을 기울였고 [100] 사용자들의 웹 AR에 대한 열정이 계속 증가함에 따라 표준화도 주의가 필요하며, 이는 학계와 업계 모두의 공동 노력이 필요하다.

3) 3-D 모델 형식 호환성: 또한 서로 다른 도구(예: 3DMax, MAYA, Blender)에 의해 생성되는 3.j와 웹 3-D 모델 간의 호환성 문제가 있어 웹 AR 애플리케이션의 애니메이션 효과 저하를 초래한다. 크로스플랫폼을 목적으로 웹 3-D 모델 포맷의 표준화도 기대된다.



E. Privacy and Security
웹 AR의 사회적 수용은 사생활과 보안 요인에 의해 쉽게 영향을 받는다. '사이보그스 중지' 운동은 사생활 유출로 구글 글래스에 큰 영향을 미쳤다. 클라이언트-서버(즉, 백엔드)이든 협업 웹 AR 구현 방법이든, 다양한 잠재적 침입 출처가 있다. 개인 식별 및 위치 정보와 같은 사용자의 개인 정보는 다른 용도로 제3자에 의해 수집될 수 있다. 프라이버시 안전을 보장하기 위해 데이터 생성 및 데이터 액세스를 위한 인증 메커니즘과 데이터 전송을 위한 안전한 네트워크 환경이 모두 요구된다. Acquisti et al. [101] AR 어플리케이션에 대한 안면 인식의 프라이버시 문제를 논의하였고, 개방성, 개인 참여, 사용 제한, 목적 사양 등을 포함한 몇 가지 프라이버시 가이드라인과 권장 솔루션인 수집이 아닌 사용을 규제할 것을 제안했다. 특히 이 새로운 맥락에서 [102], [103], [103]와 같은 표준 보안 전략 이외에도 기기 및 네트워크 암호화와 같은 표준 보안 전략을 다시 생각해 볼 필요가 있을 것이다. 예를 들어, 연구자들은 특정 AR 운영 체제[104](기본 플랫폼 관점에서), 주변 정보 수집 규칙이나 보존 정책[105](센싱 관점에서), [106], [107](데이터 액세스 관점에서), 그리고 신뢰할 수 있는 렌더러[108], [109]를 검토하기 시작했다.시야를 확보하다 이러한 기술적 해결책 외에도, AR 시스템의 프라이버시 및 보안 문제는 사회적, 정책 또는 법적 접근방식을 요구한다[110]. 웹 AR은 모바일 네트워크에 더 많이 의존하며, 따라서 침입할 가능성이 더 높다. 이는 웹 AR 애플리케이션의 개발과 구축에 상당한 어려움을 야기한다.

F. 애플리케이션 배포
웹 AR은 현실 세계와 상호작용하는 우리의 방식을 풍부하게 할 수 있는 큰 잠재력을 가지고 있다. 이동성 인식, 경량 및 교차 플랫폼 AR 애플리케이션에 대한 수요가 증가하고 있다. 구글 글래스는 대중의 관심을 불러일으켰을 뿐만 아니라 AR, 특히 모바일 AR의 홍보에도 중요한 역할을 한 획기적인 제품이었다. 대부분의 기존 웹 AR 애플리케이션은 연구용 프로토타입이지만, 포켓몬 GO의 인기는 웹 AR 애플리케이션의 매력과 잠재적으로 광범위한 배치를 입증했다. 우리는 더 많은 오픈소스 소프트웨어와 웹 AR을 위한 더 많은 개발 플랫폼과 교육 프로그램이 공개적으로 이용 가능하게 되면 더 많은 웹 AR 프로토타입 시스템과 애플리케이션이 등장할 것이라고 믿는다. 마찬가지로, 웹 AR은 개발자와 사용자들이 그것의 잠재적 가치를 탐구하는 데 도움이 되는 킬러 어플리케이션을 필요로 한다.




V. CONCLUSION
우리는 웹 AR에 대한 설문조사를 세 가지 중점 분야로 제시했다. 먼저, 모바일 AR의 원칙과 세 가지 일반적인 구현 접근방식을 검토했다. 둘째, 우리는 AR이 웹과 만나는 시점에 대한 도전과 활성화 기술에 대해 논의했고, 다른 웹 AR 구현 접근법을 설명했다. 마지막으로 웹 AR의 진행 중인 과제와 향후 연구 방향을 요약하였다. 웹 AR은 아직 초기 단계에 있지만, 본 논문에서 논의된 다양한 웹 AR 구현 접근방식과 함께 연구자와 개발자가 웹 기반 모바일 애플리케이션에 웹 AR 기술을 적용하여 AR 경험을 폭넓게 제공하기 위한 지침 및 참조 항목을 제공할 것이다. 사용자들에게. 최근에는 웹 기반의 AR 구현 방식도 W3C 그룹으로부터 집중적인 관심을 받고 있으며, Web XR Editor의 초안은 2018년 3월에 발표되었다. 다가오는 5G 네트워크는 웹 AR의 보급 촉진을 위한 효율적이고 강력한 플랫폼을 제공한다.

높은 데이터 전송률(0.1~1Gb/s)과 낮은 네트워크 지연(1~10ms)은 웹 AR의 실시간 상호작용 요구사항을 매우 잘 충족한다. MEC 패러다임은 컴퓨팅 패러다임의 새로운 트렌드, 즉 역 오프로드 메커니즘(예: 삼투압 컴퓨팅)을 드러낸다. 에지 서버의 배치와 함께, 에지 서버와 모바일 기기 간뿐만 아니라 클라우드와 네트워크 에지 간의 적응 가능하고 확장 가능한 통신과 협업은 분산된 이기종 컴퓨팅 및 스토리지 리소스를 활용하고 웹 AR의 높은 수요를 처리할 수 있는 유비쿼터스 기능을 제공할 것이다.o 성능 향상 및 에너지 절약 또한 D2D 기술은 기기 간 효율적인 협업 통신 솔루션을 제공하며, 네트워크 슬라이싱은 웹 AR의 데이터 전송을 더욱 최적화할 수 있다. 앞에서 언급한 이러한 모든 컴퓨팅 및 네트워킹 기술의 지속적인 발전이 웹 AR 지원 서비스 프로비저닝의 연구, 개발 및 구축을 더 높은 수준으로 끌어올릴 것으로 추측한다.
본 논문에서 논의한 다양한 웹 AR 구현 접근방식은 웹 AR 애플리케이션을 실제로 적용할 수 있는 기회를 제공한다.





