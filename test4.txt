The role of HTML5 IndexedDB, the past, present and future 

Abstract—Over
지난 20년 동안 웹 브라우저는 단순한 텍스트 표시에서 이제는 복잡한 멀티미디어 응용 프로그램을 지원하는 것으로 크게 바뀌었다. 고객은 이제 채팅, 게임, 인터넷 뱅킹을 즐길 수 있다. 이러한 모든 애플리케이션은 공통점이 있으며, 여러 플랫폼에서 실행될 수 있으며, 경우에 따라 오프라인에서 실행될 수 있다. HTML5의 도입으로, 브라우저가 더 높은 수준의 기능을 제공하는 등, 이러한 진화는 계속될 것이다. 이 백서에서는 HTML5의 새로운 브라우저 기반 스토리지인 IndexedDB와 같은 새로운 기술의 중요성과 배경 연구를 개략적으로 설명한다. 우리는 시간이 지남에 따라 클라이언트측에서 데이터를 저장하는 기술이 어떻게 변화했는지 그리고 알려진 보안 문제를 고려할 때 클라이언트에 데이터를 저장하는 기술이 미래에 어떻게 사용될 것인지를 보여줄 것이다. 또한, 우리는 Indexed에 대한 해결책을 제안한다.현재 모델을 확장하는 보안 모델 형태의 DB의 알려진 보안 문제.

I. INTRODUCTION
이 논문은 몇 가지 질문에 답하려고 한다. 첫째, HTML5 IndexedDb란 무엇인가, 기술은 어디에서 왔으며, 그 기술의 발전 동기가 무엇이었는가, 현재 상태와 그 상승을 억제하고 있는 것이 무엇이며, 마지막으로 HTML5 IndexedDb의 미래는 무엇인가.

HTML5는 웹 페이지가 작성되는 언어의 최신 W3C 표준이다. 또한 HTML5를 지원하는 웹 브라우저에서 제공될 것으로 예상되는 API(Application Programming Interfaces)를 정의한다. HTML5와 함께 제공되는 변화와 개선의 동기는 웹 브라우저가 데스크톱 애플리케이션을 지원하는 것과 동일한 방식으로 브라우저 기반 애플리케이션을 실행할 수 있어야 한다는 것이다. 즉, 클라이언트 측 프로세스는 서버 측 애플리케이션에서 발견되는 비효과적인 문제와 네트워크 연결 문제를 피할 수 있을 것이며, 필요한 웹 페이지 업데이트로 인한 시각적 불안정성을 피할 수 있을 것이다. 결과적으로, 주요 브라우저들은 이제 새로운 HTML5 컴포넌트와 API의 대부분을 지원한다. 따라서 HTML5 브라우저 기반 스토리지는 새로운 HTML5 기능을 사용하는 온라인 서비스의 저장된 데이터를 포함할 수 있다[1]. 어떤 경우에는 네트워크 지연 또는 데이터베이스 쿼리 프로세스 때문에 이 데이터에 액세스하는 프로세스가 느려질 수 있다[2]. 이 새로운 수준의 브라우저 기반 스토리지는 그러한 HTML5 지원 브라우저가 사이버 공격의 중요한 대상이 될 것임을 보장할 것을 제안한다[3].

웹 브라우저는 클라이언트 컴퓨터에 쿠키를 사용하여 이력 및 기타 데이터를 저장하며, 이러한 마케팅 제품이나 서비스에 매력적이다. 현대의 브라우저 기반 웹 애플리케이션은 어떤 서버측 데이터베이스보다 훨씬 더 빨리 대량의 데이터를 저장하고 그 데이터에 접근할 수 있기 때문에 브라우저 기반은 개발자들에게 중요하다. 결과적으로 HTML5는 완전히 새로운 보안 과제와 이슈를 열어준다[4]. 잘 알려진 바와 같이, 사용자 정보는 인터넷 상의 모든 움직임에서 추적된다. eCommerce 사이트들은 고객 상세 정보, 주문 및 저장된 제품을 저장하고, 사이트들은 사용자 컴퓨터에 쿠키를 저장하여 반품하는 고객을 추적한다. 이 데이터는 나중에 마케팅과 신규 고객 공략을 위해 사용될 수 있다. 때때로 소비자와 일반 대중은 인터넷을 통해 공유되는 개인 데이터의 양과 그 데이터가 어떻게 사용되거나 잘못 사용될 수 있는지 깨닫지 못한다. 데이터 프라이버시와 정보 유출은 심각한 문제다.

II. INDEXEDDB – THE PAST
이 절에서 우리는 HTML5 IndexedDB 뒤에 있는 드라이버를 고려한다. 즉, 기술이 전혀 고려되지 않았고, 무엇이 현재의 표준을 동기화하는가 하는 것이다. 우리는 먼저 eCommerce의 상태에 대해 개괄적으로 설명하고, 특히 그것의 모바일 변형 mCommerce에 주목한다. 그런 다음 인덱싱된 브라우저 기반 쿠키를 고려하십시오.DB의 지적 선행 요소.

A. eCommerce 
eCommerce라는 용어는 2000년 초에 널리 사용되기 시작했으며, 온라인 상품과 서비스를 구매하는 것과 같이 인터넷에서 전자적으로 이루어지는 상업적 거래로 정의된다. eCommerce는 전 세계 기업에 중요하고 긍정적인 영향을 미친다[5,6]. eCommerce 시장은 GDP의 비율이 약 3%였던 2007년까지 서서히 성장했지만, 가장 큰 폭의 확장은 지난 10년 동안 리테일 매출이 40%까지 증가한 것이다. 2012년에 eCommerce는 영국 사업 매출에서 18%(4920억 파운드)를 차지했다. 2012년 영국 기업 중 21%가 자국에 전자상거래 판매를 실시했으며, 영국 기업의 9%가 유럽 연합 국가에 전자상거래 판매를, 7%가 국가 통계국(ONS)에 기반하여 비유럽 국가에 판매되었다[7]. 영국의 총 GDP 1조 4,500억 파운드 중 인터넷 가치 체인은 GDP의 2.6%를 나타냈고, 이에 대해 eCommerce가 3.1%를 더 조사했다. 영국은 5460만 명의 인터넷 사용자를 자랑하며, 보급률은 86%로, 일반적인 사용자는 일주일에 42분씩 가상 상점을 검색하고 웹에서 구매한다. 더 많은 사람들이 인터넷에 연결되고 광섬유 광대역통신의 가용성이 증가함에 따라, 기관과 개인 소비자 모두 전자상거래의 사용이 계속해서 증가하고 있다.

eCommerce는 오프라인 상점과 메일 카탈로그보다 몇 가지 장점을 가지고 있다. 온라인 상점은 도매상과 유통업자가 요구하는 제3자 중간자 비용을 없앤다. 또한 물리적 상점의 오버헤드를 없애는데, 둘 다 운영비를 절감한다. eCommerce 스토어들은 또한 고객이 찾고 있는 항목을 정확히 찾을 수 있도록 검색 기능을 제공한다. 또한, 고객들은 많은 양의 제품과 서비스를 쉽게 찾아볼 수 있다. eCommerce는 비즈니스에서 비즈니스(B2B)로, 비즈니스에서 소비자(B2C)로 확장되었다. 많은 소매업체들이 전자, 서적, 운송과 같은 범주에서 더 많은 온라인 고객을 대상으로 하는 온라인 판매에 투자하기 시작했다. eCommerce는 소매업체들에게 최소한의 선행 투자로 국내 시장 밖으로 확장할 수 있는 기회를 준다[9]. 소비자들은 또한 가격을 볼 수 있고, 간단한 가격 비교를 가능하게 하고, 그런 다음 신속하게 주문을 할 수 있다. 
eCommerce 스토어들은 고객이 wish 목록에 제품을 추가할 수 있도록 하고, 그 다음 지불해야 할 친구나 가족에게 보낼 수 있다.

소비자들은 또한 어떤 상품이나 서비스를 사기 전에 기존의 온라인 상품 리뷰를 확인하고 가격을 비교할 수 있다. 일부 eCommerce 스토어는 고객이 집을 나갈 필요 없이 실행 중인 제품을 볼 수 있는 비디오 제품 리뷰를 제공한다. eCommerce 상점의 가장 중요한 장점 중 하나는 세계 시장에 대한 접근이며 온라인 상점은 모든 사람들이 이용할 수 있다. 대부분의 기업에게 eCommerce는 비용 효율적이지만 지속적으로 소비자에게 직접 광범위하게 도달할 수 있는 훌륭한 대체 공급 채널이다. 인터넷은 기업들이 웹사이트 방문자들로부터 얻은 개인 정보를 수집, 저장, 교환함으로써 전자상거래에 관여할 수 있도록 돕는다[10]. eCommerce 상점은 여러 가지 방법으로 고객을 대상으로 할 수 있으며, 가장 널리 사용되는 것은 이메일과 온라인 광고에 의한 것이다. 이 방법은 인쇄 전단지를 제작해야 하는 오프라인 상점보다 비용 면에서 유리하다. eCommerce는 모든 것이 전자적으로 이루어지기 때문에 더 짧은 시간에 더 많은 수의 고객을 목표로 할 수 있다. eCommerce 소매상들은 또한 새로운 고객들을 끌어들이기 위해 인기 있는 소셜 미디어를 통해 이점을 가지고 있다. 또한 온라인 소매업체들은 소셜 미디어 광고와 특별 서비스로 신규 및 기존 고객을 공략하기 위해 고객 구매 습관을 사용한다. 90년대 후반부터 인터넷의 모든 단계를 추적할 수 있고 이 정보가 저장될 수 있을 것으로 예측되었다[11]. 웹 브라우징의 정보는 브라우저 기록에 저장되며, eCommerce 사이트들은 관련 제품이나 서비스에 대한 광고를 목표로 고객들을 더 잘 이해하기 위해 사용자 선호도와 상점 주문을 저장한다. [12].

B. 1993년에 웹이 시작되었을 때 휴대폰은 인터넷 연결이 되지 않았기 때문에 모바일 커머스(mCommerce) 

HTML의 중요성은 처음으로 데스크탑 컴퓨터에 집중되었다. 태블릿 컴퓨터(예: 그리드 컴패스)는 드물고 전문화된 애플리케이션으로 제한되었다. 
2015년에는 휴대전화와 태블릿을 합쳐 전 세계적으로 서비스되는 웹페이지의 38%를 차지했다(StatCounter).
2011년 스마트폰 사용자 보급률은 9.6%로 2015년에는 28%에 이른다. 여기 영국에서 모바일 보급률은 72%이다.

영국의 인터넷 생태계는 연간 820억 파운드의 가치가 있으며, 모바일 연결은 이 중 16%를 차지하고 있다.mCommerce 판매는 172억 파운드가 되고 온라인 소매 매출의 26% 이상을 견인할 것으로 예상되는 2017년까지 두 자릿수 증가율을 지속할 것이다. 2007년 이후 mCommerce 매출은 2015년 매출의 5% 미만에서 21%로 급성장해 온라인 매장의 새로운 시장을 열었다. 온라인 상점들은 그들의 전략을 바꾸고 모바일 시장을 포용할 필요가 있었다.
인터넷을 통해 운영되는 기업들은 연속성을 보장하고, 이전 고객을 인식하고, eCommerce 프로세스를 단순화하기 위해 고객과의 관계를 유지할 필요가 있다. 이것은 쿠키를 사용해서 한다.

C. Cookies

쿠키는 웹 사이트에서 클라이언트 브라우저에 저장하고 각 http 요청과 함께 해당 웹 사이트로 전송되는 소량의 데이터다. 쿠키는 1994년 넷스케이프 통신사에 의해 넷스케이프 네비게이터 브라우저에서 소개되었다. 쿠키는 사용자들이 그들의 세션을 저장하고 웹사이트로 진술할 수 있게 해준다. 

eCommerce 애플리케이션은 고객의 선호도를 저장하기 위해 쿠키를 사용한다. 이 두 가지 모두 쿠키가 고객 선호도를 추적할 수 있기 때문에 온라인 구매 환경을 더욱 편리하고 집중시킨다. 쿠키는 고객 쇼핑 카트와 같은 기능 및 적절한 제품을 추천받고 개별적으로 맞춤화된 마케팅을 사용하여 오퍼링을 제공하는 반품 고객에 대한 인식을 지원한다. 

쿠키의 문제는 제3자 응용프로그램이 잠재적으로 쿠키로부터 정보를 훔칠 수 있기 때문에 사생활이다. 쿠키 중독[13]과 쿠키 주입과 같은 쿠키와 관련된 몇 가지 보안 문제도 있다. 쿠키 중독 공격은 보안 메커니즘을 우회하기 위해 쿠키 내용(사용자 ID, 비밀번호, 계정 번호, 타임스탬프)의 수정을 포함한다. 공격자들은 쿠키 독을 이용한 공격을 통해 다른 사용자에 대한 허가되지 않은 정보를 얻고 그들의 신분을 도용할 수 있다. 쿠키 주입 공격은 서버 페이지 실행을 수정하기 위해 쿠키 문자열이나 코드를 HTTP 헤더에 주입하여 SQL 주입 공격을 초래할 수 있다[14].

쿠키법은 2011년 유럽연합(EU)의 지침에 따라 유럽연합(EU)의 대부분에서 법으로 제정된 것이다. 그것은 웹사이트가 컴퓨터, 스마트폰 또는 태블릿에 정보를 저장하거나 검색하는 방문자의 동의를 얻도록 요구한다[15].
온라인상에서 정보를 수집하여 사용하는 방법을 소비자에게 알리고, 허용 여부를 선택할 수 있도록 함으로써 온라인 프라이버시를 보호하도록 설계되었다. 

쿠키는 크기가 4KB로 제한되므로 사이트별 정보를 직접 저장하는 데 거의 사용되지 않는다. 오히려, 일반적인 쿠키는 고유한 데이터베이스 키를 저장할 것이다. 그 키는 보통 공개적으로 접근할 수 없는 웹 서버의 고객 데이터베이스를 가리키게 될 것이다. 그 데이터베이스는 고객에 대한 개인 정보, 거래 및 구매 내역, 선호도 등을 포함한 모든 양의 정보를 포함할 수 있다. 쿠키, 그리고 크기와 유연성의 한계는 HTML IndexdDB의 규격과 개발로 이어졌다.

III. INDEXEDDB - PRESENT
웹 개발자와 웹 응용 프로그램에 데이터를 로컬에 저장할 수 있는 더 나은 대안을 제공하기 위해 쿠키 기능을 확장하기 위해 HTML5에서 브라우저 스토리지가 제안되었다. 브라우저 기반 스토리지로 eCommerce 회사들은 사용자 선호도, 쇼핑 카트, 제품 이미지를 로컬에 저장할 수 있다. 이것은 eCommerce 애플리케이션이 제품을 로드하고 최종 사용자에게 표시하는 과정을 가속화하는 데 도움을 줄 수 있다.

브라우저 기반 스토리지를 사용함으로써 eCommerce 사이트도 오프라인에서 사용할 수 있다. 사용자는 네트워크 연결이 끊기더라도 쇼핑 카트에 제품을 추가할 수 있는 능력을 갖게 된다. 오프라인 스토리지 사용의 가장 큰 이점은 네트워크 연결과 데이터 캡이 우려되는 모바일 기기에서입니다.

웹 서비스가 시간당 특정 수의 통화만 허용하지만 데이터가 자주 변경되지 않는 경우, 웹 애플리케이션은 정보를 로컬 스토리지에 저장하여 모바일 사용자가 데이터 한도를 위반하는 것을 방지할 수 있다[16]. 온라인 상점은 매 분마다가 아니라 매 6시간마다 새로운 이미지를 저장할 수 있어 대역폭 활용도를 높일 수 있다. 로컬 캐슁은 사용자의 서비스 금지를 방해하며, API(응용 프로그램 인터페이스)로의 호출에 실패해도 사용자가 표시할 정보를 여전히 가지고 있음을 의미하기도 한다. 예를 들어, 쇼핑 카트 데이터는 네트워크 연결이 복원될 때 로컬로 저장되고 eCommerce 사이트와 동기화될 수 있다.

HTTP를 웹의 주요 전송 계층으로 하는 주된 문제는 HTTP가 상태 비저장이라는 것이다. 이는 애플리케이션이 닫혔을 때, 다음 번에는 그 상태가 재설정된다는 것을 의미한다. 데스크톱의 응용 프로그램을 닫았다가 다시 열면 가장 최근의 상태가 복원된다. 로컬 스토리지가 여러 창에 걸쳐 저장 가능하므로 쿠키보다 낫다. 그것은 또한 더 나은 보안과 성능을 가지고 있으며, 브라우저를 닫은 후에도 데이터는 지속될 것이다 [17]. 따라서 로컬 스토리지는 애플리케이션 상태가 지속되는 데스크톱 애플리케이션과 유사한 기능을 제공한다.


1995년 넷스케이프사의 미래 비전은 웹 브라우저에서 멀티미디어 애플리케이션, 스프레드시트 및 워드 프로세싱 프로그램을 실행하는 것이었다. 넷스케이프의 주 제품은 브라우저(나비아게이터)로, 여러 운영 체제(윈도우즈, 유닉스, 매킨토시)에서 실행되도록 작성되었다. 비전은 애플리케이션이 API 집합을 사용하여 모든 운영 체제의 상단에서 실행되므로 제3자 애플리케이션 개발자들은 기본 운영 체제와 하드웨어에 대해 걱정할 필요가 없다는 것이었다. 요즘 넷스케이프의 비전은 어느 웹브라우저에서나 유튜브나 페이스북 같은 어플리케이션을 실행할 수 있는 현실이다. HTML5 표준이 진화함에 따라 새로운 브라우저 기반 스토리지 개념이 도입되었다. 이것들은 더 큰 데이터 볼륨을 저장하는 것을 목표로 한다. 또한 저장된 데이터가 모든 HTTP 요청으로 전송되지 않았기 때문에, 쿠키는 속도라는 핵심 비기능 요건을 충족했다. HTML5는 데이터를 로컬로 저장할 수 있는 두 가지 새로운 기능을 제공한다. 첫 번째 브라우저 기반 스토리지 기능은 '로컬 스토리지'라고 불린다. 그것은 영구적이고 디스크에 저장되는 오브젝트 저장소의 웹 브라우저 내에서 로컬로 정보를 저장할 수 있게 한다. 저장소는 5MB로 제한되며 저장된 데이터는 이름/값 쌍으로 되어 있다.

IndexedDB는 또 다른 HTML5 브라우저 기반 스토리지 기술이다. 그것은 NoSQL (SQL뿐만 아니라) [18], 비동기식 키값 브라우저 기반 데이터 저장소인데, 여기서 NoSQL은 관계적이거나 객체 지향적이지 않은 데이터베이스에 대한 접근 방식이다. 오히려, NoSQL은 데이터를 키/값 형식으로 저장한다. 그 데이터베이스는 많은 양의 데이터를 처리할 수 있다. 색인화된DB는 무제한의 구조화된 데이터에 빠르게 접근할 수 있는 API를 지원한다. 색인화된DB는 보안이 규격에서 고려되지 않았기 때문에 안전하지 않은 것으로 간주될 수 있다. 이전 논문 [19]에서는 저장된 데이터를 식별하고 인덱싱된 데이터에서 삭제하는 표준 법의학 도구를 사용하는 방법을 설명하였다.DB 데이터 저장소.

이전에 WebSimpleDB로 알려졌던 IndexedDB는 2009년에 웹 스토리지를 웹 브라우저에 구현하는 W3C 규격에서 나왔다. 색인화된DB는 브라우저에 구현된 영구 클라이언트측 데이터베이스로, 더 이상 사용되지 않는 WebSQL의 대안이다. 모질라와 마이크로소프트는 오라클의 버클리 DB의 영향을 가장 많이 받은 IndexdDB의 도입을 지지했다. 애플리케이션은 클라이언트 시스템에 저장된 로컬 데이터를 사용한다[20]. 관계형 데이터베이스의 표와 동등하다고 생각할 수 있는 자바스크립트 객체 스토어를 사용하여 서버에서 웹 브라우저 클라이언트로 대용량 데이터를 캐싱한다.

브라우저에 의해 저장된 파일과 데이터는 사용자의 컴퓨터 하드 드라이브에 있는 사용자 파일 저장 시스템에 보관된다. 클라이언트측 데이터베이스인 IndexedDB는 브라우저가 종료될 때에도 데이터를 저장한다. 색인화된그러면 DB는 영구적인 클라이언트측 데이터베이스로, 이는 브라우저가 오프라인 상태에서도 데이터를 검색할 수 있음을 의미한다. 따라서 파일은 사용자 파일 시스템에 상주하며 다른 파일이 덮어쓸 때까지 복구할 수 있다. 색인화된DB는 파일 데이터를 다른 종류의 데이터처럼 취급한다. 응용프로그램은 문자열, 숫자 및 JavaScript 객체를 저장할 뿐만 아니라 IndexedDB에 파일 또는 Blob을 작성할 수 있다. 이 내용은 색인화된 항목에 자세히 설명되어 있다.DB 규격 및 지금까지 IndexedDB의 Firefox 및 Chrome 애플리케이션 모두에 구현되었다. 이를 사용하여 모든 정보를 한 곳에 저장하고 단일 쿼리를 인덱싱하여 저장DB는 모든 데이터를 반환할 수 있다.

Firefox 및 Chrome의 인덱싱됨DB 구축, 파일이 실제 데이터베이스 외부로 투명하게 저장, 즉 Indexed에 일부 데이터를 저장하는 성능DB는 OS 파일 시스템에 직접 저장하는 것만큼 효율적이다. 파일을 저장해도 데이터베이스 크기가 확장되지 않고 다른 작업 속도가 느려지지 않는다. 더욱이, 파일에서 읽는 것은 구현이 OS 파일에서 읽는 것을 의미한다. Firefox 인덱싱됨DB 구현은 여러 파일에 동일한 Blob을 저장하고 있는지 여부를 인식할 수 있을 만큼 충분히 스마트하다. 이렇게 되면 한 부만 만들어진다. 동일한 Blob에 대한 추가 참조를 작성하면 내부 참조 카운터에 추가된다. 이것은 웹페이지에 완전히 투명하기 때문에 적은 자원을 사용하면서도 데이터를 더 빨리 쓴다.

인덱싱된 브라우저 기반 스토리지DB는 여러 브라우저에서 사용할 수 있으며 플랫폼 간 호환성이 있다. 웹 애플리케이션은 Indexed를 사용할 수 있음추가 프로그래밍 없이 데스크톱, 모바일 및 태블릿의 DB 웹 애플리케이션은 네트워크 연결 없이도 브라우저 기반 스토리지를 사용할 수 있다. HTML5 표준은 데이터를 클라이언트 컴퓨터에 저장할 수 있는 기능을 제공하며, 네트워크 접속 없이도 언제든지 접속할 수 있다. 

HTML5의 중요한 측면은 웹 응용 프로그램이 로컬 스토리지를 사용하여 오프라인으로 실행될 수 있다는 것이다. 데스크톱 프로그램과 비교하여 HTML5의 장점은 웹 애플리케이션은 설치나 시동 구성이 필요하지 않으며 노트북, 전화 또는 태블릿과 같은 HTML5를 지원하는 어떤 장치에서도 실행된다는 것이다. eCommerce 시나리오에서, 이것은 고객들이 관련 웹 사이트를 방문하는 것 만으로도 웹 애플리케이션을 이용하기 시작할 수 있기 때문에 새로운 고객들에 대한 진입 장벽을 감소시킨다.

IndexedDB는 웹 애플리케이션에 오프라인 스토리지를 제공하여 로컬 스토리지를 확장한다. 이는 eCommerce 스토어에서 모든 HTTP 요청과 함께 전송하지 않고 고객 기본 설정을 저장하기 위해 사용될 수 있다. 따라서 HTTP 요청 및 응답 트래픽은 감소하고 고객 선호도 또는 기타 정보는 요청 시에만 액세스된다. HTML5의 중요한 측면은 웹 응용 프로그램이 로컬 스토리지를 사용하여 오프라인으로 실행될 수 있다는 것이다. 이는 클라이언트 데이터가 사용자 브라우저에 저장되고 애플리케이션이 필요로 할 때마다 액세스된다는 것을 의미한다. 오프라인 스토리지와 캐시된 페이지는 네트워크 지연 시간이 최소화되므로 더 나은 사용자 환경을 제공한다. 

새로운 HTML5 인덱싱됨DB 기능은 클라이언트 컴퓨터의 리소스에 대한 접근성이 증가하므로 새로운 보안 문제를 야기한다. 가장 큰 단점 중 하나는 새로운 표준이 추가적인 보안을 제공하지 않는다는 것이다. HTML5 비디오 및 오디오는 타사 애플리케이션을 Adobe로 대체하고 공통 공격 벡터를 FLASH 애플리케이션 또는 플러그인으로 폐쇄하고 있다. 또한 HTML5는 로컬 스토리지를 포함하는 컴퓨터 자원에 대한 더 많은 접근을 제공하고, 따라서 공격의 새로운 기회를 열어준다. 

Indexed와 같은 현재 브라우저 기반 스토리지의 문제DB는 클라이언트 컴퓨터의 다른 애플리케이션도 오프라인 데이터에 액세스할 수 있다는 우려가 있다. 웹 응용 프로그램이 서로의 데이터를 읽는 것을 방지하기 위해 모든 웹 스토리지 기술에 동일한 발신지 정책(SOP)으로 알려진 메커니즘을 적용한다. 브라우저들은 동일한 발신지 정책을 시행함으로써 웹 응용 프로그램 (www.example.com),의 호스트명, 웹 응용 프로그램이 실행되는 포트 번호(80)와 데이터가 전달된 프로토콜(일반적으로 http 또는 https)을 기준으로 저장한 모든 데이터의 발신지를 확인하고 기록한다. 웹 응용 프로그램이 로컬로 저장된 데이터에 액세스하기를 원할 때, 브라우저는 데이터의 현재 원점과 원점을 확인하고 이것들이 일치하는 경우에만 접근을 허용한다. 데이터는 동일한 발신지 정책을 사용하여 보호된다.


수행된 실험에서, 우리는 인덱싱된 것을 확인했다.DB는 수신된 대로 데이터를 저장하여 암호화되지 않도록 한다. 그러나 이것만이 문제가 아니다. 브라우저 기반 스토리지는 삭제된 데이터가 하드 드라이브에서 완전히 삭제되지 않는 또 다른 문제에 직면한다. 표준 법의학 도구의 도움으로 현재와 삭제된 색인을 복원할 수 있었다.데스크탑 드라이브와 모바일 드라이브의 DB 데이터. 

삭제된 데이터를 복원하는 문제는 공격자가 브라우저 기반 로컬 스토리지의 여러 버전을 얻을 수 있는 암호화되지 않은 상태로 데이터를 저장하는 것에 대한 보안 문제를 확대할 뿐이다. 삭제된 데이터는 하드 드라이브에 남아 있으며 삭제 요청이 실행되면 데이터는 삭제된 것으로 표시되지만 여전히 관련 공간을 차지하고 있다. 추가 데이터 스토리지 요청은 추가 디스크 공간을 할당하기만 하지만 이전 데이터는 하드 드라이브에서 유지되며 덮어쓰지 않는다. 

우리는 IndexedDB와 복잡한 시나리오를 가지고 있다. 지속성, 스토리지 크기, 네트워크 활용도 향상 등의 장점이 있지만, 보안 취약성의 단점이 있다.

IV. INDEXEDDB - FUTURE

인덱스의 미래DB는 브라우저 기반 오프라인 사용의 보안을 지원한다. 기존의 브라우저 기반 스토리지는 몇 가지 문제에 직면해 있기 때문에 웹 개발자들에게 인기가 없다. 첫 번째 문제는 필요한 코드의 복잡성인데, 여기서 개발자들은 구조를 이해하기 위해 여분의 시간이 필요하다. 그렇게 말하면, 개발자들이 웹 애플리케이션에 스토리지를 기반으로 하여 브라우저를 구현하는 것을 시작할 수 있도록 도와주는 많은 온라인 튜토리얼 예들이 있다.

인덱싱된 두 번째 문제DB는 보안이다. 현재 인덱싱됨DB는 데이터를 암호화되지 않은 상태로 저장하므로 보호되거나 안전하게 삭제되지 않는다. 따라서 인덱싱됨개인 정보의 저장에 대해서는 DB 저장을 권할 수 없다. 이 때문에 기능성이 제한된다. 암호화되지 않은 상태에서 데스크톱, 모바일 또는 태블릿에 저장된 데이터와 마찬가지로 공격자는 어떠한 보호도 거치지 않고 데이터를 얻을 수 있다. 예를 들어 전자 메일 링크에 숨겨진 것과 같은 XSS(사이트 간 스크립팅 공격)를 사용하면 공격자는 저장된 데이터를 찾을 수 있었다. 색인화된DB는 본질적으로 그러한 공격에 취약하다. 

웹 애플리케이션과 정보의 저장을 고려할 때 보안 결함은 불가피하다. 이것은 공격의 정교함뿐만 아니라 사이트 간 스크립팅과 같은 많은 공격이 사회 공학에 기반을 두고 인간의 오류를 착취하기 때문에 극도로 보호하기가 어렵다. 브라우저 기반 스토리지 보안 설계가 문제지만 이를 수정할 수 있다. 수정은 클라이언트측 암호화를 사용하기 위한 것으로, 브라우저 기반 스토리지가 적어도 서버의 암호화에 못지 않게 안전하다는 것을 의미한다. 


우리는 브라우저 확장으로 구현될 보안 모델을 제안했다. 제안된 보안 모델은 현재 웹 브라우저의 모델을 확장한다. 또한 클라이언트측 암호화 라이브러리를 통해 브라우저 확장을 구현하여 클라이언트 시스템의 데이터 보안에 도움이 된다. 응용 프로그램이 인덱싱된 새 트랜잭션을 요청할 때데이터베이스를 열고 데이터를 저장하는 DB, 제안된 라이브러리 확장자는 데이터를 암호화한다. 이 데이터는 공격자가 랩톱이 분실되거나 휴대폰이 도난되었을 때 발생하는 장치에 물리적으로 접근할 경우에도 암호화 방식만큼 안전할 것이다. 

보안 모델은 암호화 프레임워크로 구성되어 있어 데이터 보안에 도움이 될 것이다. 그러나 암호화 프레임워크는 완전한 보안 보호를 제공할 수 없다. 우리는 그러한 보호는 XSS 공격의 대상이 될 수 있기 때문에 단일 기계에서는 달성할 수 없다고 주장한다. 따라서, 브라우저가 되기 위한 외부 기능의 구현이 필요하다. 암호화 라이브러리 위에는 멀티팩터 인증(MFA) 또는 2인자 인증(2FA)이 구현되었다. 

우리의 조사 결과를 바탕으로, 우리는 브라우저 기반 데이터베이스에 대한 사례가 있다고 진술할 수 있다. 우리는 확장 형태로 브라우저에 구현된 보안 모델의 일부인 JavaScript 암호화 프레임워크를 구현했다. 제안된 보안 모델 확장은 인덱싱된 보안 문제를 해결함DB는 그것의 설계의 산물로서 가지고 있다. 또한, 구현된 보안 모델은 보안 요건을 충족한다.


V. CONCLUSION AND FUTURE WORK

이러한 발견에 기초하여, 우리는 브라우저 기반 데이터베이스에 대한 사례가 있다고 진술할 수 있다. 브라우저 기반 데이터베이스는 서버에 있는 데이터베이스보다 더 많은 보안 문제에 직면하고 있으며, 이로 인해 데이터베이스 활용이 억제되었다. 그럼에도 불구하고 브라우저 기반 스토리지에서 직면하고 있는 기존 문제에도 불구하고, 기술의 편리성, 성능, 지속적인 네트워크 연결에 대한 의존도 감소로 인해 기술의 미래는 있다.

데이터를 로컬에 저장하는 문제와 우려를 고려할 때 브라우저 기반 스토리지는 널리 사용될 가능성이 있으며, 여기서 주요 이점은 성능 속도, 교차 플랫폼(데스크톱, 모바일, 태블릿) 및 브라우저 가용성이다. 로컬 스토리지의 장점은 단점을 능가하며, 식별된 문제를 수정할 수 있으며, 브라우저 기반 스토리지는 설계 제한사항으로 도입된 보안 문제에 대한 우려 없이 개발자가 널리 사용할 수 있다는 것을 명심해야 한다.

우리의 향후 작업은 [21]의 보안 메커니즘에 대한 더 자세한 내용을 포함한다. 제안된 보안 프레임워크가 브라우저 기반 로컬 스토리지에 성공적으로 적용되었지만, 보안 및 성능 모델을 확장하는 데 있어 추가적인 개선이 이루어질 수 있다. 이러한 사항은 생체측정학과 같은 추가 보안 요인을 사용하기 위해 현재 모델을 확장하여 해결할 수 있다.
