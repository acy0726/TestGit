CNNs for NLP in the Browser: Client-Side Deployment
and Visualization Opportunities


우리는 브라우저에서 피드 포워드 추론을 완벽하게 수행하는 CNN 네트워크의 JavaScript 구현을 시연합니다. 이러한 배치는 모델이 백엔드 서버 요청을하지 않고도 광범위한 장치에서 클라이언트에서 완벽하게 실행될 수 있음을 의미합니다. 이 디자인은 엄격한 대기 시간 요구 사항 또는 낮은 연결성을 가진 어플리케이션에 유용합니다. 우리의 평가는 자바 스크립트가 배포 대상이 될 가능성을 보여줍니다. 또한 브라우저 내 구현은 정보 시각화를위한 JavaScript 생태계와의 완벽한 통합을 가능하게하여 시각적으로 신경망을 검사하고 내부 동작을 더 잘 이해할 수있는 기회를 제공합니다.

1. 소개
일단 교육을 받으면 신경망 (NN)을 사용하는 피드 포워드 추론은 간단합니다. 일련의 행렬 곱셈, 비선형 성 적용 및 기타 간단한 연산. ONNX와 같은 모델 상호 교환 형식의 등장으로 모델 추리와 모델 교육을 분리하는 깔끔한 추상화가되었습니다. 이러한 맥락에서 우리는 JavaScript를 NLP 응용 프로그램을위한 신경망의 배포 대상으로 검토합니다.
분명히하기 위해, 우리는 훈련에 관심이 없으며 단순히 추론을 위해 배포 할 사전 훈련 된 모델의 존재를 가정합니다.
왜 자바 스크립트인가? 우리는 두 가지 중요한 이유를 제시합니다. 첫째, JavaScript는 모든 웹 브라우저에 상주하므로 전 세계에서 가장 널리 배포되는 플랫폼입니다. 자바 스크립트의 구현은 랩톱에서 태블릿, 휴대 전화, 잠재적으로 "스마트 홈"가젯까지 브라우저가있는 모든 장치에서 클라이언트 측 실행을 위해 모든 웹 페이지에 NN을 임베드 할 수 있음을 의미합니다. 클라이언트에서 추론을 수행하면 서버 요청 및 관련 대기 시간이 필요하지 않습니다. 이러한 배치에서 응답 성 (예를 들어, 선행 예측, 문법 수정)에 대한 높은 요구 또는 낮은 연결성 (예를 들어, 원격 위치 또는 개발 도상국)으로 고통받는 NLP 애플리케이션은 NN 모델을 이용할 수있다. 이러한 배포는 사용자 데이터가 클라이언트를 떠나지 않기 때문에 사용자 개인 정보를 보호합니다. 둘째, 브라우저가 정보 시각화를위한 지배적 인 플랫폼으로 부상했으며 JavaScript 기반 구현은 최신 기술 및 기존 툴킷 (예 : D3.js)과의 완벽한 통합을 지원합니다.
이는 시각적으로 신경망을 검사 할 수있는 기회를 제공합니다. 우리는 문장 분류를위한 CNN 신경 네트워크의 프로토 타입 구현을 시연합니다. JavaScript (Kim, 2014)의 모델 인 감정 분석은 웹 브라우저에서 완전히 실행됩니다. 당연히 추론 성능은 본질적으로 실행되는 코드에 비해 상당히 느려지지만 브라우저는 그럼에도 불구하고 다양한 플랫폼에서 GPU 및 하드웨어 가속을 이용할 수 있습니다. 우리의 구현은 모델이 추출하는 의미 적 n-gram 기능에 대한 통찰력을 얻을 수있는 간단한 시각화를 가능하게합니다. 이것은 모델을 이해하는 것이 그것을 개선하는 데 중요하기 때문에 교육학 (신경 네트워크에 대한 학생들을 가르치는 것)과 연구에 유용합니다. 전반적으로, 우리의 시각화는 해석 가능한 기계 학습에 대한 새로운 연구 과제에 기여합니다 (Lipton, 2016).
