요약 
현재 딥러닝의 학습과 구현의 방식은 워크스테이션 이나 고성능 컴퓨팅 환경에서 이루어 지고있다.
하지만 TensorFlow.js는 JavaScript로 기계 학습 알고리즘을 작성하고 브라우저 환경에서 실행 할수 있게 
만들어져 UI/UX 의 다양한 융합과 사용자중심의 딥러닝을 구현할수 있다. 



TensorFlow.js API는 클라이언트와 서버측에서 실행 될수 있도록 설계되었다. 
브라우저 내부에서 실행 될때 WebGL을 통해 장치의 GPU를 사용하여 빠른 병렬화 부동 소수계산이
가능하게한다. 만약 일반 JS로 구현체이면 클라이언트의 느린 CPU로 동작하게 된다. 일반 JS실행을 폴백이라고
부르며 이 폴백은 모든 싱핼 환경에서 실행할 수있으며 WebGL 또는 Tensoflow 바이너리에 대한 
엑세스 권한이 없을때  자동으로 실행 된다.

how

결론
TensorFlow.js는 클라이언트와 서버에서 실행되는 고성능 툴킷이다.
최신 머신러닝을 쉽게 접근 할수있는 잠재력이 있으며 기존 네이티브한 개발의 어려움을
JS로 간편화 하여 접근성을 확대 하였다. 웹 플랫폼의 그래픽API를 활용 할수있으며,
수많은 장치 및 실행 환경을 지원 할수가 있어 매우 확장성이 넓은 기술 집합체이다.

문제점.
클라이언트의 성능에 여향을 받기에 속도가 상대적으로 느리고, 네이티브 텐서플로우와의 연동
규칙의 표준이 현재 개발중이다. 또한 TensorFlow.js를 활용한 서비스 및 구현체에 대한 정보가 
없어 효과성은 미지수로 남아있다.


